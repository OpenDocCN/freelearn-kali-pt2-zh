["```\n# nmap --spoof-mac Cisco --data-length 24 -T paranoid --max-hostgroup 1 --max-parallelism 10 -Pn 10.10.10.100/24 -v -n -sS -sV -oA output -p T:1-1024 --randomize-hosts \n```", "```\nnmap -n –D Decoy1,decoy2,decoy3 targetIP \nnmap –D RND:10 targetIP\nnmap -sI [Zombie IP] [Target IP] \n```", "```\n    sudo apt install tor \n    ```", "```\n    # sudo service tor start \n    ```", "```\n    # sudo service tor status \n    ```", "```\n    # firefox www.whatismyip.com \n    ```", "```\n    # proxychains firefox www.whatismyip.com \n    ```", "```\nsudo dmitry -winsepo out.txt www.cyberhia.com \n```", "```\nsudo apt install thc-ipv6 \n```", "```\nwhile read r; do nc -v -z $r 1-65535; done < iplist \n```", "```\nwhile read r; do nc -v -z target $r; done < ports \n```", "```\nnmap -sS -O target.com \n```", "```\n    nc -vv www.target.com port number and then enter HEAD / HTTP/1.0 \n    ```", "```\nfping -g IPrange\nnmap -sP IPrange\nfor i in {1..254}; do ping -c 1 10.10.0.$i | grep 'from'; done \n```", "```\nnmap -sP -PT 80 IPrange \n```", "```\n#!/bin/bash\nfunction helptext { \n  echo \"enter the massnmap with the file input with list of IP address ranges\" \n}\nif [ \"$#\" -ne 1 ]; then \n  echo  \"Sorry cannot understand the command\" \n  helptext>&2 \n  exit 1 \nelif [ ! -s $1 ]; then \n  echo \"ooops it is empty\" \n  helptext>&2 \n  exit 1 \nfi \n\nif [ \"$(id -u)\" != \"0\" ]; then \n  echo \"I assume you are running as root\" \n  helptext>&2 \n  exit 1 \nfi\nfor range in $(cat $1); do \n  store=$(echo $range | sed -e 's/\\//_/g') \n  echo \"I am trying to create a store to dump now hangon\" \n  mkdir -p pwd/$store; \n  iptables -A INPUT -p tcp --dport 60000 -j DROP; \n  echo -e \"\\n alright lets fire masscan ****\" \n  masscan --open --banners --source-port 60000 -p0-65535 --max-rate 15000 -oBpwd/$store/masscan.bin $range; masscan --read$ \n  if [ ! -s ./results/$store/masscan-output.txt ]; then \n     echo \"Thank you for wasting time\" \n  else \n    awk'/open/ {print $4,$3,$2,$1}' ./results/$store/masscan-output.txt |  awk'\n/.+/{ \n if (!($1 in Val)) { Key[++i] = $1; } \n Val[$1] = Val[$1] $2 \",\"; \n END{ \n for (j = 1; j <= i; j++) {\n printf(\"%s:%s\\n%s\",  Key[j], Val[Key[j]], (j == i) ? \"\" : \"\\n\");\n } \n}'>}./results/$store/hostsalive.csv \n\nfor ipsfound in $(cat ./results/$store/hostsalive.csv); do \n  IP=$(echo $TARGET | awk -F: '{print $1}'); \n  PORT=$(echo $TARGET | awk -F: '{print $2}' | sed's/,$//'); \n  FILENAME=$(echo $IP | awk'{print \"nmap_\"$1}'); \n  nmap -vv -sV --version-intensity 5 -sT -O --max-rate 5000 -Pn -T3 -p $PORT -oA ./results/$store/$FILENAME $IP; \n   done \nfi\ndone \n```", "```\nsnmpwalk -c public ipaddress –v1 \n```", "```\nnmap --script smb-enum-users.nse -p445 <host> \n```", "```\nsmbclient -I TargetIP -L administrator -N -U \"\" \n```", "```\nenum4linux.pl [options] targetip \n```", "```\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\nsudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg\nsudo apt-get install azure-cli \n```", "```\n$ sudo git clone https://github.com/gyoisamurai/GyoiThon\ncd GyoiThon\nsudo pip3 install -r requirements.txt\nsudo apt --fix-broken install\nsudo apt install python3-tk \n```", "```\nhttp cyberhia.com 80 /\nhttps cyberhia.com 443 /admin/ \n```"]