["```\n        #!/usr/bin/python\n\n        import logging\n        import subprocess\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        if len(sys.argv) != 2:\n         print \"Usage - ./arp_disc.py [interface]\"\n         print \"Example - ./arp_disc.py eth0\"\n         print \"Example will perform an ARP scan of the local \n           subnet to which eth0 is assigned\"\n         sys.exit()\n\n        interface = str(sys.argv[1])\n        ip = subprocess.check_output(\"ifconfig \" + interface +\n         \" | grep 'inet ' |  awk '{ print $2 }' \n         | cut -d ':' -f2\", shell=True).strip()\n        prefix = ip.split('.')[0] + '.' + ip.split('.')[1] +\n         '.' +ip.split('.')[2] + '.'\n\n        for addr in range(0,254):\n         answer=sr1(ARP(pdst=prefix+str(addr)),timeout=1,verbose=0)\n          if answer == None:\n            pass\n          else:\n            print prefix+str(addr)\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        if len(sys.argv) != 2:\n         print \"Usage - ./arp_disc.py [filename]\"\n         print \"Example - ./arp_disc.py iplist.txt\"\n         print \"Example will perform an ARP scan of \n           the IP addresses  listed in iplist.txt\"\n         sys.exit()\n\n        filename = str(sys.argv[1])\n        file = open(filename,'r')\n\n        for addr in file:\n         answer = sr1(ARP(pdst=addr.strip()),timeout=1,verbose=0)\n         if answer == None:\n             pass\n         else:\n             print addr.strip()\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        if len(sys.argv) != 2:\n         print \"Usage - ./pinger.py [/24 network address]\"\n         print \"Example - ./pinger.py 172.16.36.0\"\n         print \"Example will perform an ICMP scan of\n           the 172.16.36.0/24 range\"\n         sys.exit()\n\n        address = str(sys.argv[1])\n        prefix = address.split('.')[0] + '.' + address.split('.')[1]\n          + '.' +address.split('.')[2] + '.'\n\n        for addr in range(1,254):\n         answer=sr1(ARP(pdst=prefix+str(addr)),timeout=1,verbose=0)\n         if answer == None:\n             pass\n         else:\n             print prefix+str(addr)\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        if len(sys.argv) != 2:\n         print \"Usage - ./pinger.py [filename]\"\n         print \"Example - ./pinger.py iplist.txt\"\n         print \"Example will perform an ICMP ping scan\n           of the IP addresses listed in iplist.txt\"\n         sys.exit()\n\n        filename = str(sys.argv[1])\n        file = open(filename,'r')\n\n        for addr in file:\n         ans=sr1(IP(dst=addr.strip())/ICMP(),timeout=1,verbose=0)\n         if ans == None:\n           pass\n         else:\n            print addr.strip()\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        if len(sys.argv) != 2:\n         print \"Usage - ./ACK_Ping.py [/24 network address]\"\n         print \"Example - ./ACK_Ping.py 172.16.36.0\"\n         print \"Example will perform a TCP ACK ping scan\n           of the 172.16.36.0/24 range\"\n         sys.exit()\n\n        address = str(sys.argv[1])\n        prefix = address.split('.')[0] + '.' + address.split('.')[1]\n         + '.' + address.split('.')[2] + '.'\n\n        for addr in range(1,254):\n        response = sr1(IP(dst=prefix+str(addr))/\n        TCP(dport=80,flags='A'),timeout=1,verbose=0)\n         try:\n             if int(response[TCP].flags) == 4:\n                 print \"172.16.36.\"+str(addr)\n         except:\n             pass\n\n```", "```\n        #!/bin/bash\n\n        if [ \"$#\" -ne 1 ]; then\n        echo \"Usage - ./arping.sh [interface]\"\n        echo \"Example - ./arping.sh eth0\"\n        echo \"Example will perform an ARP scan of the \n          local subnet to which eth0 is assigned\"\n        exit\n        fi\n\n        interface=$1\n        prefix=$(ifconfig $interface | grep 'inet ' \n        | awk '{ print $2 }'| cut -d ':' -f 2 | cut -d '.' -f 1-3)\n\n        for addr in {1..254}; do\n        arping -c 1 $prefix.$addr | grep \"bytes from\" \n        | cut -d \" \" -f 5 | cut -d \"(\" -f 2 | cut -d \")\" -f 1 &\n        done\n\n```", "```\n        #!/bin/bash\n\n        if [ \"$#\" -ne 1 ]; then\n        echo \"Usage - ./arping.sh [input file]\"\n        echo \"Example - ./arping.sh iplist.txt\"\n        echo \"Example will perform an ARP scan of all IP addresses\n         defined in iplist.txt\"\n        exit\n        fi\n\n        file=$1\n\n        for addr in $(cat $file); do\n        arping -c 1 $addr | grep \"bytes from\" \n        | cut -d \" \" -f 5 | cut -d \"(\" -f 2 | cut -d \")\" -f 1 &\n        done\n\n```", "```\n        #!/bin/bash\n\n        if [ \"$#\" -ne 1 ]; then\n        echo \"Usage - ./ping_sweep.sh [/24 network address]\"\n        echo \"Example - ./ping_sweep.sh 172.16.36.0\"\n        echo \"Example will perform an ICMP ping sweep of the\n          172.16.36.0/24 network and output to an output.txt file\"\n        exit\n        fi\n\n        prefix=$(echo $1 | cut -d '.' -f 1-3)\n\n        for addr in $(seq 1 254); do\n        hping3 $prefix.$addr --icmp -c 1 >> handle.txt;\n        done\n\n        grep len handle.txt | cut -d \" \" -f 2 \n        | cut -d \"=\" -f 2 >> output.txt\n        rm handle.txt\n\n```", "```\n        #!/bin/bash\n\n        if [ \"$#\" -ne 1 ]; then\n        echo \"Usage - ./udp_sweep.sh [/24 network address]\"\n        echo \"Example - ./udp_sweep.sh 172.16.36.0\"\n        echo \"Example will perform a UDP ping sweep of the                       172.16.36.0/24 network and output to an output.txt file\"\n        exit\n        fi\n\n        prefix=$(echo $1 | cut -d '.' -f 1-3)\n\n        for addr in $(seq 1 254); do\n        hping3 $prefix.$addr --udp -c 1 >> handle.txt;\n        done\n\n        grep Unreachable handle.txt | cut -d \" \" -f 5 | cut -d \"=\"\n         -f 2 >> output.txt\n        rm handle.txt\n\n```", "```\n        #!/bin/bash\n\n        if [ \"$#\" -ne 1 ]; then\n        echo \"Usage - ./tcp_sweep.sh [/24 network address]\"\n        echo \"Example - ./tcp_sweep.sh 172.16.36.0\"\n        echo \"Example will perform a tcp ping sweep of the                       172.16.36.0/24 network and output to an output.txt file\"\n        exit\n        fi\n\n        prefix=$(echo $1 | cut -d '.' -f 1-3)\n\n        for addr in $(seq 1 254); do\n        hping3 $prefix.$addr -c 1 >> handle.txt;\n        done\n\n        grep len handle.txt | cut -d \" \" -f 2 \n        | cut -d \"=\" -f 2 >> output.txt\n        rm handle.txt\n\n```", "```\n        #!/bin/bash\n\n        if [ \"$#\" -ne 1 ]; then\n        echo \"Usage - ./ping_sweep.sh [/24 network address]\"\n        echo \"Example - ./ping_sweep.sh 172.16.36.0\"\n        echo \" Example will perform an ICMP ping sweep of the \n          172.16.36.0/24 network and output to an output.txt file\"\n        exit\n        fi\n\n        prefix=$(echo $1 | cut -d '.' -f 1-3)\n\n        for addr in $(seq 1 254); do\n        ping -c 1 $prefix.$addr | grep \"bytes from\" \n        | cut -d \" \" -f 4 | cut -d \":\" -f 1 &\n        done\n\n```"]