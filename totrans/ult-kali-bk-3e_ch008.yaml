- en: 7 Performing Vulnerability Assessments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Join our book community on Discord
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[https://packt.link/SecNet](https://packt.link/SecNet)![Qr code Description
    automatically generated](../media/file258.png)As you have learnt so far, the reconnaissance
    phase is very important for successfully moving onto the exploitation phase of
    penetration testing and the Cyber Kill Chain. Discovering security vulnerabilities
    on a targeted system helps adversaries identify the attack surface, which is the
    points of entry on a system which can be exploited to gain unauthorized access.
    As an aspiring ethical hacker and penetration tester, understanding how to efficiently
    identify the attack surface and profile a targeted system will help you better
    plan your method of attack and determine which exploits will help you gain a foothold
    on the target.In this chapter, you will learn how to use Kali Linux with various
    popular tools to perform a vulnerability assessment on a network. You will start
    by learning how to install, perform, and analyze scan results using Nessus, one
    of the most popular and industry-recognized vulnerability scanners within the
    cybersecurity industry. Then, you will learn how to leverage the hidden secrets
    and power of Nmap to easily discover security flaws on systems. Finally, you will
    learn how to perform web vulnerability assessments.In this chapter, we will cover
    the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Nessus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability identification using Nmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with Greenbone Vulnerability Manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using web application scanners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s dive in!
  prefs: []
  type: TYPE_NORMAL
- en: Technical Requirements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To follow along with the exercises in this chapter, please ensure that you
    have met the following hardware and software requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux - [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nessus Essentials - [https://www.tenable.com/products/nessus/nessus-essentials](https://www.tenable.com/products/nessus/nessus-essentials)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greenbone Vulnerable Manager - [https://github.com/greenbone/gvmd](https://github.com/greenbone/gvmd)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting started with Nessus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When diving into the field of cybersecurity, there is a very well-known tool
    everyone needs to know about, and that''s Nessus. Nessus is a vulnerability scanner
    that can detect over 47,000 **Common Vulnerability and Exposure** (**CVE**) security
    flaws on systems. Furthermore, Nessus allows security professionals to deploy
    Nessus within centralized locations and automate periodic scanning on targeted
    systems, which allows continuous and automated vulnerability assessment within
    an organization.As an aspiring penetration tester, you may need to use Nessus
    to perform a vulnerability assessment within an organization, determine the risk
    and severity of each security flaw, and provide recommendations on how to mitigate
    the risk of possible cyber-attacks based on the security vulnerabilities found.
    In this section, you will learn how to set up and perform a vulnerability assessment
    using Nessus on your Kali Linux machine.To get started working with Nessus Essentials,
    please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: If you’re a Mac user who is running Kali Linux in Parallels on the M1 Mac (ARM64)
    chip, you may experience some issues when setting up Nessus within Kali Linux.
    However, the process works fine on a Windows-based system.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Part 1 – installing Nessus
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this part, you will learn how to install and setup Nessus Essentials on
    the Kali Linux virtual machine to identify security vulnerabilities on targeted
    systems:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power-on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, either on Kali Linux or your host machine, open the web browser and go
    to [https://www.tenable.com/products/nessus/nessus-essentials](https://www.tenable.com/products/nessus/nessus-essentials)
    to register for a free license to activate Nessus Essentials during the setup
    process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file259.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown the preceding screenshot, a business email address is required to complete
    the registration, however I’ve used a personal free email address and was able
    to successfully register and received a Nessus Essentials activation code.
  prefs: []
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, open the **Terminal** and use the following commands to
    update the local software packages repository list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, use the following commands to download the Nessus Essentials package
    onto the Kali Linux virtual machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the execution of the preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file260.png)'
  prefs: []
  type: TYPE_IMG
- en: If you’re having difficulties running the preceding commands, please go to [https://www.tenable.com/downloads/nessus](https://www.tenable.com/downloads/nessus),
    select the latest version of Nessus and choose **Linux – Debian – amd64** to download
    the software package onto Kali Linux.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Next, install the Nessus software package onto Kali Linux:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshots the installation of Nessus:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file261.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, use the following command to start and restart the Nessus service:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The `systemctl status nessusd.service` command can be used to verify whether
    the Nessus service is active and running on Kali Linux.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'To continue the Nessus setup process, open the web browser within Kali Linux
    and go [https://kali:8834/](https://kali:8834/), as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file262.png)'
  prefs: []
  type: TYPE_IMG
- en: When you first visit [https://kali:8834/](https://kali:8834/), the web browser
    will provide a security warning because Nessus uses a self-signed digital certificate.
    Click on **Advanced**, then on **Accept the Risk and Continue**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the Nessus initialization page will appear, click on **Continue** as
    shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file263.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, select the **Register for Nessus Essentials** option and click on **Continue**,
    as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file264.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Since you have registered and received a Nessus Essentials license key during
    *step 2*, click on **Skip** on the registration page, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file265.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, enter the license key from your email message and into the **Activation
    Code** field, then click on **Continue**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file266.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, Nessus will show the license key/activation code, click on **Continue**
    as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file267.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, create a user account and click on **Submit**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file268.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you’re getting an error: `invalid code field bad format`, try entering the
    license key/activation code manually to activate Nessus Essentials.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Nessus will automatically log-in to the Dashboard, then starts the initialization
    process and begin downloading additional updates and plugins for the application.
    This process usually takes a few minutes to complete. To view the event logs,
    click on **Settings** | **About** | **Events** as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file269.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the download process is completed, Nessus will compile all the plugins.
    Ensure this is completed before proceeding to scan a targeted system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 2 – identifying vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Nessus is able to detect over 78,000 CVEs on targeted systems to help cybersecurity
    professionals such as ethical hackers and penetration testers to identify the
    attack surface of assets owned by organizations, and use the collected information
    to provide recommendations on preventing and mitigating cyber-attacks and threats.Use
    the following instructions to get started with scanning for security vulnerabilities
    using Nessus:'
  prefs: []
  type: TYPE_NORMAL
- en: Power-on the **Metasploitable 3** (**Windows version**) virtual machine as our
    targeted system on the network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, log-in to Nessus Essential dashboard at [https://kali:8834/](https://kali:8834/)
    and click on **New Scan**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file270.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, various vulnerability and compliance scanning templates will be presented,
    enabling you to easily choose the best suitable template based on your scanning
    objectives. For instance, you scan use a pre-defined template to detect whether
    targeted systems are vulnerability to WannaCry, ZeroLogon, PrintNightmware and
    even Log4Shell. For our exercise, click on **Basic Network Scan**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file271.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, the scan **Settings** page will appear that provides you with the options
    to set a name, description, folder to easily organize your scans, targets. Set
    a name, description and the IP address of the Metasploitable 3 (Windows version)
    virtual machine as the target, then click on **Launch**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file272.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As shown in the preceding screenshot, there are various options and sub-menus,
    such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Credentials** tab enables you to specify login credentials that allows Nessus
    to log-in to the targeted system to retrieve specific information that’s not easily
    available when performing a non-credential scan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scheduling** allows penetration testers to automate their scans over a period
    of time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Notifications** allows Nessus to send email notifications when scan have
    started and completed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Discovery** specifies port scanning options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Assessment** enables you to choose whether Nessus scans for web vulnerabilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Report allows you to specify how Nessus handles the processing of information
    **that** will be shown in its report.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Advanced** enables you to specific how much traffic Nessus will send on the
    network, this is useful for low bandwidth networks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, Nessus will begin scanning the target and displays the progress within
    the **My Scans** summary window, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file273.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After the scan is completed, Nessus will automatically update the scan status,
    as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file274.png)'
  prefs: []
  type: TYPE_IMG
- en: After the scan is completed, it’s automatically saved within the **My Scans**
    section.
  prefs: []
  type: TYPE_NORMAL
- en: Part 3 – Vulnerability analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Using vulnerability scanners such as Nessus can help us automate our process
    of vulnerability discovery and classification. As an aspiring ethical hacker and
    penetration tester, it’s essential to understand how to perform vulnerability
    analysis on reported data. To get started with vulnerability analysis with Nessus,
    please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the scan results, click on **My Scan** | **Identifying Vulnerability
    on Target1**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file275.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot shows a summary on the all security vulnerabilities
    that were found on the targeted system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file276.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, Nessus provides a very nice and easy-to-understand
    view of all the security vulnerabilities that were discovered. Both the Column
    and Doughnut charts provide an overview of how many security vulnerabilities were
    found based on their severity ratings and scores.
  prefs: []
  type: TYPE_NORMAL
- en: 'To view a list of all discovered security vulnerabilities, click on the **Vulnerabilities**
    tab, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file277.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, Nessus has grouped multiple security vulnerabilities
    together.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, click on the **CRITICAL** severity group to display all the security
    vulnerabilities that belong to this group, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file278.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, Nessus has listed the security vulnerabilities
    in order of most to least severe. As a penetration tester, this is an indication
    of the security vulnerabilities that are most likely to create a large impact
    on the targeted system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, click on any one of the critical vulnerability to view more details about
    it, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file279.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, Nessus provides a description to help
    cybersecurity professionals to better understand the risk of having this security
    vulnerability on a system and its impact. In addition, Nessus also provides solutions
    to remediate this security vulnerability and provide the security posture of the
    targeted system or asset owned by the organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, Nessus provides their **Vulnerability Priority Rating** (**VPR**)
    scoring system to help cybersecurity professionals on prioritize their resources
    on resolving this security risk, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file280.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Additionally, Nessus provides the metrics that were used from the **Common
    Vulnerability Scoring System** (**CVSS**) to calculate the severity of the vulnerability,
    as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file281.png)'
  prefs: []
  type: TYPE_IMG
- en: Cybersecurity professionals and researchers uses the CVSS calculator at [https://www.first.org/cvss/calculator/3.1](https://www.first.org/cvss/calculator/3.1)
    to determine the severity rating and score of security vulnerabilities on systems.
    This calculation helps industry experts to determine the risk factors when classifying
    security vulnerabilities based on severity rating, risk level and impact.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Next, let''s take the CVSS 3.0 Vector and insert it into the calculator to
    determine how a threat actor would compromise a system with this vulnerability:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, append the CVSS 3.0 Vector to the end of the following URL:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.first.org/cvss/calculator/3.0#](https://www.first.org/cvss/calculator/3.0#)The
    following is the final version of the URL, with the CVSS 3.0 Vector as the suffix:[https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H](https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Upon visiting the preceding URL, you will see how the vectors were allocated
    to determine the vulnerability score of 9.8, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file282.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, a threat actor will need to create an
    exploit that needs to be delivered across a **Network** (**N**) path with a **Low**
    (**L**) attack complexity, which requires **None** (**N**) privileges to be successful.
    Furthermore, **None** (**N**) human user interactions are needed, due to the scope
    of the attack will remain **Unchanged** (**U**). Once the exploit takes advantage
    of the security vulnerability on the targeted system, the impact on the confidentiality,
    integrity, and availability of the system will be **High** (**H**).
  prefs: []
  type: TYPE_NORMAL
- en: Part 4 – Exporting vulnerability reports
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Generating a report from Nessus helps you quickly reference vulnerabilities
    and their descriptions after a penetration test. In this section, you will learn
    how to generate various types of reports using Nessus.To get started with this
    exercise, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the Nessus Dashboard, click on **Report** as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file283.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, a pop-up window will appear and provide you with various report generating
    options. Choose the **Report Format**, **Report Template** and click on **Generate
    Report** as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file284.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the report is generated, ensure you save it on your desktop and open it
    using a PDF reader, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file285.png)'
  prefs: []
  type: TYPE_IMG
- en: Having completed this section, you have learned how to use Nessus to perform
    a vulnerability assessment on a target during a penetration test. In the next
    section, you will learn how to identify security vulnerabilities using the Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability identification using Nmap
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **Nmap Scripting Engine** (**NSE**) is one of the most powerful features
    of Nmap. It enables penetration testers and security researchers to create, automate,
    and perform customized scanning on targeted systems. When working with NSE, the
    scanning techniques are usually aggressive and has the potential to cause unexpected
    data loss or even crash the targeted system. However, NSE allows a penetration
    tester to easily identify security vulnerabilities and determine whether the target
    is exploitable.There are 600+ pre-built scripts that belongs to the following
    NSE categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Auth**: This category contains scripts that scan a targeted system to identify
    whether authentication bypass is possible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Broadcast**: This category contains scripts that are used to discover host
    systems on a network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Brute**: This category contains scripts that are used to perform some types
    of brute-force attacks on a remote server to with the intention to gain unauthorized
    access.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Default**: This category contains a set of default scripts within NSE for
    scanning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Discovery**: This category contains scripts that are used in active reconnaissance
    to identify network services on a targeted system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DoS**: This category contains scripts that simulate a **Denial-of-Service**
    (**DoS**) attack on a targeted system to check whether it’s susceptible to such
    types of attacks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exploit**: This category contains scripts that are used to actively exploit
    security vulnerabilities on a target.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**External**: This category contains scripts that usually send data that''s
    been gathered from a targeted system to an external resource for further processing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fuzzer**: This category contains scripts that are used to send random data
    into an application to discover any software bugs and vulnerabilities within applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intrusive**: This category contains high-risk scripts that can crash systems
    and cause data loss.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Malware**: This category contains scripts that can determine whether a target
    is infected with malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Safe**: This category contains scripts that are not intrusive and safe to
    use on a targeted system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Version**: This category contains scripts that are used to gather the version
    information of services on a targeted system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vuln**: This category contains scripts that are used to check for specific
    vulnerabilities on a targeted system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To learn more about NSE, please see: [https://nmap.org/book/nse.html](https://nmap.org/book/nse.html).
    For a full list of NSE scripts, please see: [https://nmap.org/nsedoc/scripts/](https://nmap.org/nsedoc/scripts/).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'To get started working with NSE to identify security vulnerabilities, please
    use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Power-on **Kali Linux** and **Metasploitable 2** virtual machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, open the **Terminal** and use the following commands to
    view a list of locally available NSE scripts:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows there are 4000+ NSE scripts within the `/usr/share/nmap/scripts`
    directory on Kali Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file286.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To filter all **File Transfer Protocol** (**FTP**) NSE scripts, use the following
    the commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'As shown in the following screenshot, the `*` works as a wildcard to show all
    scripts which begins with `ftp`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file287.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, let’s use Nmap to determine whether the targeted system (Metasploitable
    2) is running an FTP service and determine the service version:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../media/file288.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, port 21 is open and the service is identified
    as *vsftpd 2.3.4* on the targeted system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s use one of the NSE scripts to determine whether vsftpd is vulnerable
    on the target:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The `--script` command allows you to specify either a single script, multiple
    scripts, or a category of scripts. The following screenshot shows the results
    of performing a scan on our victim machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file289.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, the ftp-vsftpd-backdoor script was used
    to check whether the target is vulnerable to a backdoor present within the vsFTPd
    2.3.4 application. As a result, NSE indicated the targeted system is running a
    vulnerable service.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that a vulnerability has been found, the next step is to determine whether
    there are exploits that can leverage this security weakness. The following screenshot
    shows the results of performing a Google search for known exploits for the vsFTPd
    2.3.4 service:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file290.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, there's a link for an exploit from Rapid7,
    the creator of Metasploit. Using this Rapid7 URL, you can gather further details
    on how to exploit the vulnerability using Metasploit on Kali Linux. Additionally,
    notice the second URL within the Google search result, which is from Exploit-DB.
    This is a trusted exploit database that is maintained by the creators of Kali
    Linux. These are two trusted online resources for gathering exploits during a
    penetration test.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, within Kali Linux, there is a tool known as **searchsploit** that
    allows you to perform a query/search for exploits within the offline version of
    Exploit-DB on Kali Linux.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following screenshot shows the search results when using the `searchsploit`
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file291.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As shown in the preceding screenshot, `searchsploit` was able to identify multiple
    exploits from the local, offline version of the Exploit-DB database. Notice there
    is a particular entry that indicates there''s already an exploit module within
    Metasploit. The following screenshot shows the `vsFTPd exploit` module within
    Metasploit:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file292.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, this exploit module can take advantage
    of security vulnerabilities that are found within any Linux-based system, which
    is running vsFTPd version 2.3.4\. If the exploit is successful, the penetration
    tester will be able to create a backdoor with **Remote Code Execution** (**RCE**)
    on the targeted system.
  prefs: []
  type: TYPE_NORMAL
- en: Many vulnerability scripts can be used within Nmap as part of NSE. Please be
    sure to check out the complete list at [https://nmap.org/nsedoc/categories/vuln.html](https://nmap.org/nsedoc/categories/vuln.html),
    where you will be able to identify the names and details of each script that can
    be found within the vulnerability category.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'If you want to execute an entire category of scripts, you can use the `nmap
    --script <category-name>` command, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'When using the `vuln` category, NSE will use all the vulnerability detection
    scripts to check for security weaknesses on the target. As shown in the following
    screenshot, additional security flaws were discovered on the Metasploitable 2
    victim machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file293.png)'
  prefs: []
  type: TYPE_IMG
- en: As an aspiring ethical hacker and penetration tester, you have learned how to
    perform various scanning techniques to fingerprint and discover security vulnerabilities
    on host systems within a network using Nmap. Using the information found within
    this section can help you in researching exploits and payloads, which can take
    advantage of these security vulnerabilities.In the next section, you will learn
    how to install and use an open source vulnerability management tool on Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Greenbone Vulnerability Manager
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **Open Vulnerability Assessment Scanner** (**OpenVAS**) tool is a free
    vulnerability scanner that allows both ethical hackers and penetration testers
    to perform a vulnerability assessment on a network. OpenVAS can scan both authenticated
    and unauthenticated vulnerability assets within an organization. When using an
    authenticated scan, the penetration tester provides valid login credentials to
    the vulnerability scanner, which allows it to authenticate to a system to provide
    a thorough scan for any misconfigurations on the target system''s settings. However,
    the unauthenticated scan is usually not as thorough since it looks for any security
    vulnerabilities on the surface of the target and provides a report.**Greenbone
    Vulnerability Manager** (**GVM**) is a centralized management tool that manages
    the functions and vulnerabilities of OpenVAS. In this exercise, you will learn
    how to set up GVM on Kali Linux and perform a vulnerability assessment on a target
    using OpenVAS.To get started with this exercise, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Part 1 – Installing GVM
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Power-on the **Kali Linux** virtual machine and ensure it has internet connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, open the **Terminal** and use the following commands to
    update the local software package repository list file and install the GVM package:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'During the installation, you may be prompted to restart various services, ensure
    you use the `spacebar` on your keyboard to select the services to be restarted,
    then use `Tab` key to move between options and hit `Enter` on OK, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file294.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the installation is complete, reboot the Kali Linux virtual machine and
    login to continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, use the following commands to initialize the setup process and generate
    default user credentials:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The setup process usually takes a while to complete as it downloads addition
    updates and plugins. Once the setup process is completed, the default admin account
    is created with a randomized password, as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file295.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, use the `sudo gvm-check-setup` command to verify GVM is set up correctly.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, open the web browser within Kali Linux and go to `https://127.0.0.1:9392`
    to access the web interface for GVM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use the default `admin` user account that was created at the end of the setup
    process and login as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file296.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After logging-in, click on **Administration** | **Feed Status** as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file297.png)'
  prefs: []
  type: TYPE_IMG
- en: 'GVM will continue to download addition **Cyber Threat Intelligence** (**CTI**)
    from multiple trusted online sources to ensure the vulnerability scanning engine
    within GVM has the latest updates and signatures to identify the latest security
    flaws on system, as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file298.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The download process usually takes a while to complete. Once all content is
    updated, the feed status will automatically change, as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file299.png)'
  prefs: []
  type: TYPE_IMG
- en: Ensure all threat feeds are updated before performing any vulnerability scans
    on targeted systems.
  prefs: []
  type: TYPE_NORMAL
- en: Part 2 – vulnerability identification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To use GVM to identify security vulnerabilities on a targeted system, please
    use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the GVM dashboard, click on **Configurations** | **Targets** to set our
    target host, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file300.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, click on the **New Target** icon that’s located on the top-left corner.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the **New Target** window, ensure you set a Name, Hosts (IP address of Metasploitable
    3) and click on **Save**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file301.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, the **New Target** window provides additional
    options such as entering user credentials to perform credential scanning to obtain
    more information. Furthermore, you can specific multiple targeted systems from
    a list and exclude specific targets if you’re scanning a range of addresses.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, create a new scan task by clicking on **Scans** | **Tasks**, as shown
    below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file302.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, click on the **Magic Paper** icon (top-left corner), then **New Task**,
    as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file303.png)'
  prefs: []
  type: TYPE_IMG
- en: 'On the **New Task** window, enter a name of the task and select **Scan Targets**
    from the drop-down menu, then click on **Save**, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file304.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, the new scan task will appear on the lower section of the same page,
    click on the **Play** icon to start the scan on the targeted system, as shown
    below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file305.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The task status will change automatically during this process. Once the task
    is completed, the status will appear as **Done** and display its results, as shown
    below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file306.png)'
  prefs: []
  type: TYPE_IMG
- en: Part 3 – vulnerability analysis and reporting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To perform vulnerability analysis using GVM, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the results of the report, click on **Scans** | **Reports**, as shown
    below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file307.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, GVM analyzed and categorized the discovered
    security vulnerabilities into **High**, **Medium**, **Low**, **Log** and **False
    Positives** to help cybersecurity professionals with their decision-making process
    and prioritizing resources to more critical vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'To view a detailed list of identified security vulnerability, click on the
    report date, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file308.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, click on the **Results** tab to view a list of all security vulnerabilities
    and their severity levels that were found on the targeted system, as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file309.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To view the description of a vulnerability, click on any one from the results
    list, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../media/file310.png)'
  prefs: []
  type: TYPE_IMG
- en: Using the information shown in the preceding screenshot, ethical hackers and
    penetration testers will gain a better insight on the impact a vulnerability has
    on a system if it’s exploited by an adversary. In addition, ethical hackers can
    use this information to develop or acquire exploits to compromise multiple systems
    with the same security flaw on the targeted network.In this section, you have
    learnt how to setup and work with GVM to identify security vulnerabilities on
    a targeted system. In the next section, you will learn how to use common tools
    to identify security flaws on web applications.
  prefs: []
  type: TYPE_NORMAL
- en: Using web application scanners
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As an aspiring penetration tester, you will also be required to perform web
    application security testing based on the scope of your penetration testing engagements.
    In this section, you will learn how to use various types of web application scanners
    to identify and fingerprint web applications on a target server.Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: WhatWeb
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'WhatWeb enables ethical hackers and penetration testers to identify and fingerprint
    the type of technologies that are running on web application servers. WhatWeb
    is pre-installed on Kali Linux and should be part of your arsenal of tools during
    your reconnaissance and vulnerability assessment phase.To profile a targeted web
    server using WhatWeb, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power-on the **Kali Linux** and **Metasploitable 3** (Windows version)
    virtual machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, open the **Terminal** and use the following commands to
    identify whether there’s a web application running on the target:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'As shown in the following screenshot, web services were found on port 80 and
    8080:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file311.png)'
  prefs: []
  type: TYPE_IMG
- en: Web application protocols such as HTTP and HTTPS operates on ports 80, 443 and
    8080.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Next, use the following commands to profile the web server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'As shown in the following screenshot, WhatWeb was able to identify the web
    application and additional web technologies on the targeted system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file312.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As an aspiring ethical hacker and penetration tester, some tools will help
    you gather information about the web server, while others will discover security
    vulnerabilities. However, it''s important to research all the technologies that
    are found on a targeted web server when using WhatWeb; many security researchers
    share their findings and disclosure vulnerabilities to help others fight the battle
    against cyber criminals.To put it simply, WhatWeb provides the following details:'
  prefs: []
  type: TYPE_NORMAL
- en: The web application and its version
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The web technologies and their versions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The host operating system and its version
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By researching the version numbers of each technology, you will be able to find
    exploits that can take advantage of the vulnerabilities on the targeted system.
    In the next section, you will learn how to use Nmap to discover web application
    vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Nmap
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As you have learnt, Nmap has a lot of very cool features and enables penetration
    testers to perform various types of scanning on targeted system to discover specific
    details them. Within NSE, many scripts are already pre-loaded onto Kali Linux.Using
    the following command, you will be able to see an entire list of all the Nmap
    scripts that begin with http:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'From the list, you can choose to use a particular script to check for HTTP
    vulnerabilities on a targeted system. Let''s imagine you want to identify whether
    a web application is vulnerable to **Structured Query Language** (**SQL**) **Injection**
    attacks. The `http-sql-injection` NSE script will be able to identify such security
    flaws. The following Nmap command shows how to invoke the SQL Injection script
    and perform a scan on a target that has port 80 open for web services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: The following screenshot shows Nmap was able to identify possible SQL Injection
    at multiple points on the target:![](../media/file313.png)As shown in the preceding
    screenshot, the Nmap script was able to automate the process of checking whether
    various URLs and paths are susceptible to a possible SQL Injection attack.
  prefs: []
  type: TYPE_NORMAL
- en: While many NSE scripts can be leveraged to identify security vulnerabilities
    in web applications, it’s important to always identify the service version of
    the web application by simply using the `-A` or `-sV` syntax when performing an
    initial scan to profile your target. Once you have identified the web application's
    service version, use the internet to research known vulnerabilities. As a penetration
    tester, it's always good to perform additional research on vulnerabilities as
    you may find more information on how to compromise the target.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Be sure to perform additional scanning on the target to discover any hidden
    security vulnerabilities, and use the information found at [https://nmap.org/nsedoc/](https://nmap.org/nsedoc/)
    to gain an in-depth understanding of the purpose of various NSE scripts. In the
    next section, you will learn how to use Nikto to check for web application vulnerabilities
    on a target.
  prefs: []
  type: TYPE_NORMAL
- en: Nikto
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Nikto is an open source web application scanner that comes pre-installed within
    Kali Linux. This tool allows penetration testers to easily automate the process
    of identifying security vulnerabilities that may exist within a web application
    on a web server.To get started using Nikto, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Power-on the **Kali Linux** and **Metasploitable 2** virtual machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, open the **Terminal** and use the following commands to
    scan the web application on **Metasploitable 2**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Using the `-h` syntax allows you to specify the target's hostname or IP address.
    To learn more about various scanning options, use the `nikto --help` command.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The following screenshot shows some of the scan results from our target system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file314.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, Nikto can identify various security vulnerabilities
    within the target web application. They are listed in bullet format, and the `+`
    icon is used to indicate a new result. Take some time to read each line thoroughly
    as Nikto helps security professionals understand the details of the security vulnerabilities.
    It also provides references to where the flaws were found and how to resolve those
    weaknesses. Next, you will learn how to use identify web application vulnerabilities
    using Metasploit.
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this section, you will learn how to leverage the power of Metasploit to
    discover security vulnerabilities on a web application server. For our target,
    we''ll be using the Metasploitable 2 virtual machine. To get started with this
    exercise, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power-on both the **Kali Linux** and **Metasploitable 2** virtual machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, open the **Terminal** and use the following command to start
    the PostgreSQL datatbase and initialize Metasploit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, use the following commands to access the Metasploit framework:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, use the following command to load the WMAP web vulnerability scanner
    module within Metasploit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the execution of the preceding commands and
    the WMAP plugin loaded successfully:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file315.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, use the following commands to set the targeted system as the Metasploitable
    2:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows how to set the targeted host within the WMAP
    web vulnerability scanner:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file316.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Skip Next, use the following commands to specific the URL of the targeted web
    application. We''ll be targeting the Mutillidae web application within the Metasploitable
    2 virtual machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the expected results once the target has been
    set:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file317.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, the target web application has been set
    to Mutillidae within the host system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the following commands to automatically load various web scanning
    modules from Metasploit for security testing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows many Metasploit web scanning modules that are
    being loaded into the WMAP web vulnerability scanner:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file318.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the web scanning modules have been loaded, use the following commands
    to perform web security testing on the target web application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'When WMAP scan is completed, use the following command to view a list of web
    security vulnerabilities that have been discovered by the WMAP web scanner within
    Metasploit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, use the `vulns` command to see the overall results of the security
    assessment from WMAP:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: If Metasploit is able to identify vulnerabilities based on their CVE IDs, it
    will be shown with the `vulns` command.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Having completed this exercise, you have learnt how to use Metasploit to identify
    web application vulnerabilities. Next, you will learn how to perform a vulnerability
    scan on a target WordPress web application using WPScan.
  prefs: []
  type: TYPE_NORMAL
- en: WPScan
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'While there are many web applications within the e-commerce industry, there
    are many organizations that deploy the WordPress web application as their preferred
    **Content Management System** (**CMS**). While WordPress provides a very stylish
    and clean presentation of websites, many organizations do not always update their
    WordPress platforms and plugins, thereby leaving their web server and web application
    vulnerable to potential cyberattacks from threat actors on the internet. Within
    Kali Linux, you will learn about the WPScan tool, which allows penetration testers
    to perform vulnerability scanning and enumeration on the WordPress web application
    on a target server. To get started with this exercise, please use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power-on both **Kali Linux** and **Metasploitable 3** (Windows version)
    virtual machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On **Kali Linux**, open the **Terminal** and use the following commands update
    the WPScan database:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, use the following commands to identify security vulnerabilities on the
    Wordpress web application on Metasploitable 3 (Windows version) virtual machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the vulnerability scan''s results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file319.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, WPScan will check each component of the
    WordPress installation and configuration on the remote target and provide details
    of its findings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the `-e u` commands to enumerate the username(s) for any logon accounts
    on the targeted Wordpress web application, as shown below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'As shown in the following screenshot, WPScan was able to identify the login
    usernames of the targeted web server:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../media/file320.png)'
  prefs: []
  type: TYPE_IMG
- en: As you have seen, it's quite simple to perform a vulnerability scan on a WordPress
    server and gather a list of potentially authorized usernames on the target server.
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn more about WPScan, please see: [https://www.kali.org/tools/wpscan/](https://www.kali.org/tools/wpscan/).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to perform web scanning
    using various tools and techniques within Kali Linux. Having gathered a list of
    web application security vulnerabilities, with some additional research, you will
    be able to find working exploits to test whether these vulnerabilities are truly
    exploitable.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, you have learnt about the importance of discovering security
    vulnerabilities within an organization and its assets. You also gained hands-on
    experience and skills with using various tools such as Nessus, Nmap, and GVM to
    perform security assessments on systems. You also discovered how various tools
    and techniques can be used to easily identify security flaws on web applications.I
    trust that the knowledge presented in this chapter has provided you with valuable
    insights, supporting your path towards becoming an ethical hacker and penetration
    tester in the dynamic field of cybersecurity. May this newfound understanding
    empower you in your journey, allowing you to navigate the industry with confidence
    and make a significant impact. In the next chapter, *Understanding Network Penetration
    Testing*, you will focus on how to use various techniques and strategies when
    performing network penetration testing.
  prefs: []
  type: TYPE_NORMAL
- en: Further Reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Understanding Nessus - [https://www.techtarget.com/searchnetworking/definition/Nessus](https://www.techtarget.com/searchnetworking/definition/Nessus)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nmap Scripting Engine (NSE) - [https://nmap.org/book/man-nse.html](https://nmap.org/book/man-nse.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nmap NSE scripts - [https://nmap.org/nsedoc/scripts/](https://nmap.org/nsedoc/scripts/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CVSS scoring system - [https://www.first.org/cvss/](https://www.first.org/cvss/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
