["```\n# This is the\n# beginning of a\n# multi-line comment\n```", "```\nawesomeSauce = 0\n```", "```\nprint(awesomeSauce + 1)\n# This is the same as the computer printing the value of\n# awesomeSauce + 1, in other words 0 + 1 which is 1.\n```", "```\nawesomeSauce = “Sweet Baby Ray’s”\nprint(\"My favorite sauce is: \" + awesomeSauce + \"!\")\n# This prints - My favorite sauce is: Sweet Baby Ray's! - to your\n# screen. You might someday decide that your favorite sauce has\n# changed. So, you simply need to change the variable, leaving the\n# rest of the code alone.\nawesomeSauce = \"Sour Baby Ray's\"\nprint(\"My favorite sauce is: \" + awesomeSauce + \"!\")\n# Now it will print – My favorite sauce is: Sour Baby Ray's!\n```", "```\nIf a < b:\nprint(a + \" is less than \" + b)\nelif a == b:\nprint(a + \" is equal to \" + b)\nelse:\nprint(a + \" is greater than \" + b)\n```", "```\nmorale = 0\nwhile morale < 11:\n\tif morale == 10:\n\t\tprint(\"Morale has improved! The beatings will stop.\")\n\telif morale < 10:\n\t\tprint (\"The beatings will continue\")\n\tmorale += 1\n```", "```\nfor n in range (20, 60, 5):\n\tprint(x)\n# calling the (range) function. 1st number is bottom, 2nd is top, 3rd is\n# the value to increment by. In this case, we are counting by fives\n# starting at the number 20 and finishing at 55.\nmoney = [\"rich\", \"wealthy\", \"modest\", \"struggling\", \"poor\", \"broke\", \"can't even afford to pay attention\"]\nfor m in money:\n\tif m == \"struggling\"\n\t\tcontinue\n\tprint(m)\n# This for loop will loop through the entire list of text except when # it reaches the word \"struggling\" which it will skip but then\n# continue on with the rest of the list.\n```", "```\ndef security_clearance(cname):\n\tprint(cname + \"** CLASSIFIED **\")\nsecurity_clearance(\"Confidential\")\nsecurity_clearance(\"Secret\")\nsecurity_clearance(\"Top Secret\")\nsecurity_clearance(\"Top Secret – White Knight\")\nsecurity clearance(\"Top Secret – Black Knight\")\nsecurity clearance(\"Top Secret – Night night\")\n```", "```\nf = open(\"D:\\\\mafiaFiles\\hitlist.txt\", \"r\")\nprint(f.read())\n```", "```\nf = open(\"hitlistTwo.txt\", \"a\")\nf.write(\"'Joey The Sledgehammer Hoffa\")\nf.close()\n# A good coder will close the file after appending to it\n# and then open it using f.read to view it\nf = open(\"hitlistTwo.txt\", \"r\")\nprint(f.read())\n```", "```\nimport mysql.connector\nmyfirstdatabase = mysql.connector.connect(\n host=\"localhost\",\n user=\"Karllane\",\n password=\"Batman\"\n)\nprint(myfirstdatabase)\n# You will see words, usually in all caps but not necessarily, like\n# SELECT, INSERT, WHERE, DELETE, CREATE, JOIN, LIMIT, ORDER BY,\n# and DROP that will indicate database activity is occurring\n```", "```\n# Import libraries\nimport re                  #Regular expressions for pattern matching\n#Main function\ndef check_logs(filename, keywords):\n  with open(filename, \"r\") as f:      #open the log file to check\n    for line in f:                    #Read the log file line by line\n      for keyword in keywords:        #Check for each keyword\n        if re.search(keyword, line):  #If there's a match… do nextline\n          print(f\"Alert! Found keyword '{keyword}' in log file: {line.strip()}\")\n# Define the log file path and keywords to search for\nlog_file = \"/path/to/your/log/file.log\"\nkeywords = [\"ERROR\", \"WARNING\", \"unauthorized access\"]\n# Call the function to check the logs\ncheck_logs(log_file, keywords)\n```"]