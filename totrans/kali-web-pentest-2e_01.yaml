- en: Setting Up Kali Linux and the Testing Lab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing VirtualBox on Windows and Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a Kali Linux virtual machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updating and upgrading Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the web browser for penetration testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a vulnerable virtual machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a client virtual machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring virtual machines for correct communication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting to know web applications on a vulnerable virtual machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this first chapter, we will cover how to prepare our Kali Linux installation
    to be able to follow all the recipes in the book and set up a laboratory with
    vulnerable web applications using virtual machines.
  prefs: []
  type: TYPE_NORMAL
- en: Installing VirtualBox on Windows and Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Virtualization is, perhaps, the most convenient tool when it comes to setting
    up testing laboratories or experimenting with different operating systems, since 
    it allows us to run multiple virtual computers inside our own without the need
    for any additional hardware.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, we will use VirtualBox as a virtualization platform to
    create our testing targets as well as our Kali Linux attacking machine.
  prefs: []
  type: TYPE_NORMAL
- en: In this first recipe, we will show you how to install VirtualBox on Windows
    and on any Debian-based GNU/Linux operating system (for example, Ubuntu).
  prefs: []
  type: TYPE_NORMAL
- en: It is not necessary for the reader to install both operating systems. The fact
    that this recipe shows both options is for the sake of completion.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If we are using Linux as a base operating system, we will need to update our
    software repository''s information before installing anything on it. Open a Terminal
    and issue the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following steps need to be performed for installing VirtualBox:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install VirtualBox in any Debian-based Linux VirtualBox, we can just open
    a Terminal and enter the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After the installation finishes, we will find VirtualBox in the menu by navigating
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'to Applications | Accessories | VirtualBox. Alternatively, we can call it from
    a Terminal:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If you are using a Windows machine as a base system, skip to *step 3*.
  prefs: []
  type: TYPE_NORMAL
- en: In Windows, we need to download the VirtualBox installer from [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/2ccf25c3-4122-48cc-ad50-950bbf3ab525.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the file is downloaded we open it and start the installation process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the first dialog box, click Next and follow the installation process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We may be asked about installing network adapters from the Oracle corporation;
    we need to install these for the network in the virtual machines to work properly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/f1652dde-a93e-4c2b-8365-98e9588ece4b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After the installation finishes, we just open VirtualBox from the menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/4f606f92-4b58-428d-9bc9-f04a7287abc4.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we have VirtualBox running and we are ready to set up the virtual machines
    to make our own testing laboratory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VirtualBox will allow us to run multiple machines inside our computer through
    virtualization. With this, we can mount a full laboratory with different computers
    using different operating systems and run them in parallel as far as the memory
    resources and processing power of our host allow us to.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The VirtualBox extension pack gives the VirtualBox's virtual machine extra features,
    such as USB 2.0/3.0 support and remote desktop capabilities. It can be downloaded
    from [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
    After it is downloaded, just double-click on it and VirtualBox will do the rest.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are some other virtualization options out there. If you don''t feel comfortable
    using VirtualBox, you may want to try the following:'
  prefs: []
  type: TYPE_NORMAL
- en: VMware Player/Workstation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: QEMU
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kernel-based Virtual Machine** (**KVM**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a Kali Linux virtual machine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali is a GNU/Linux distribution built by Offensive Security that is focused
    on security and penetration testing. It comes with a multitude of tools preinstalled,
    including the most popular open source tools used by security professionals for
    reverse engineering, penetration testing, and forensic analysis.
  prefs: []
  type: TYPE_NORMAL
- en: We will use Kali Linux throughout this book as our attacking platform and we
    will create a virtual machine from scratch and install Kali Linux in it in this
    recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali Linux can be obtained from its official download page [https://www.kali.org/downloads/](https://www.kali.org/downloads/).
    For this recipe, we will use the 64-bit image (the first option on the page).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The process of creating a virtual machine in VirtualBox is pretty straightforward;
    let''s look at this and perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To create a new virtual machine in VirtualBox, we can use the main menu, Machine
    | New, or click the New button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'New dialog will pop up; here, we choose a name for our virtual machine, the
    type, and the version of the operating system:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/cb07b513-1a94-4ec6-a7af-41964ce08145.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, we are asked about the memory size for this virtual machine. Kali Linux
    requires a minimum of 1 GB; we will set 2 GB for our virtual machine. This value
    depends on the resources of your system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We click Next and get to the hard disk setup. Select Create a virtual hard
    disk now and click Create for VirtualBox to create a new virtual disk file in
    our host filesystem:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/a6015201-a79a-438d-864d-cd4b27681a76.png)'
  prefs: []
  type: TYPE_IMG
- en: 'On the next screen, select these options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Dynamically allocated: This means the disk image for this virtual machine will
    be growing in size (in fact, it will be adding new virtual disk files) when we
    add or edit files in the virtual system.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For Hard disk file type, pick VDI (VirtualBox Disk Image) and click Next.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, we need to select where the files will be stored in our host filesystem
    and the maximum size they will have; this is the storage capacity for the virtual
    operating system. We leave the default location alone and select a `35.36 GB`
    size. This depends on your base machine''s resources, but should be at least 20
    GB in order to install the requisite tools. Now, click on Create:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](assets/0721e5c5-f90d-4cda-ae84-6b999bd33559.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the virtual machine is created, select it and click Settings, and then
    go to Storage and select the CD icon under Controller: IDE. In the Attributes
    panel, click on the CD icon and select Choose Virtual Optical Disk File and browse
    to the Kali image downloaded from the official page. Then click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/a5b1f8e0-a865-4aa1-9b6e-ee7c719f23c9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We have created a virtual machine, but we still need to install the operating
    system. Start the virtual machine and it will boot using the Kali image we configured
    as the virtual CD/DVD. Use the arrows to select Graphical install and hit *Enter*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/badc5a2b-d191-4828-9743-aaf3baf875e4.png)'
  prefs: []
  type: TYPE_IMG
- en: We are starting the installation process. On the next screens, select the language,
    keyboard distribution, hostname, and domain for the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After that, you will be asked for a Root password; root is the administrative,
    all-powerful user in Unix-based systems and, in Kali, it is the default login
    account. Set a password, confirm it, and click Continue:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/02a4850c-a5e8-432a-8da7-fbb8e962b9e1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we need to select the time zone, followed by configuration of the hard
    disk; we will use guided setup using the entire disk:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/47429d4e-5f6d-4497-a5ce-6786b04dbc00.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the disk on which you want to install the system (there should only be
    one).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next step is to select the partitioning options; we will use All files in
    one partition.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, we need to confirm the setup by selecting Finish partitioning and write
    changes to disk and clicking Continue. Then select Yes to write the changes and
    Continue again on the next screen. This will start the installation process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/a17ef118-aed9-48f8-ae68-5edb9f7be81c.png)'
  prefs: []
  type: TYPE_IMG
- en: When the installation is finished, the installer will ask you to configure the
    package manager. Answer Yes to Use a network mirror and set up your proxy configuration;
    leave it blank if you don't use a proxy to connect to the internet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The final step is to configure the GRUB loader: just answer Yes and, on the
    next screen, select the hard disk from the list. Then, click Continue and the
    installation will be complete.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Continue in the Installation complete window to restart the VM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the VM restarts, it will ask for a username; type `root` and hit *Enter*.
    Then enter the password you set for the root user to log in. Now we have Kali
    Linux installed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we created our first virtual machine in VirtualBox, set the
    reserved amount of memory our base operating system will share with it, and created
    a new virtual hard disk file for the VM to use and set the maximum size. We also
    configured the VM to start with a CD/DVD image and, from there, installed Kali
    Linux the same way we would install it on a physical computer.
  prefs: []
  type: TYPE_NORMAL
- en: To install Kali Linux, we used the graphical installer and selected guided disk
    partitioning, this is, when we install an operating system, especially a Unix-based
    one, we need to define which parts of the system are installed (or mounted) in
    which partitions of the hard disk; luckily for us, Kali Linux's installation can
    take care of that and we only need to select the hard disk and confirm the proposed
    partitioning. We also configured Kali to use the network repositories for the
    package manager. This will allow us to install and update software from the internet
    and keep our system up to date.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are different (and easier) ways to get Kali Linux running in a virtual
    machine. For example, there are pre-built virtual machine images available to
    download from the Offensive Security site: [https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-hyperv-image-download/](https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-hyperv-image-download/). We
    chose this method as it involves the complete process of creating a virtual machine
    and installing Kali Linux from scratch.'
  prefs: []
  type: TYPE_NORMAL
- en: Updating and upgrading Kali Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we start testing the security of our web application, we need to be sure
    that we have all the necessary up-to-date tools. This recipe covers the basic
    task of maintaining the most up-to-date Kali Linux tools and their most recent
    versions. We will also install the web applications testing meta-package.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you have a working instance of Kali Linux up and running, perform the
    following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as a root on Kali Linux; and open a Terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the `apt-get update` command. This will download the updated list of packages
    (applications and tools) that are available to install:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/725e1e0e-247a-46a0-aeb0-53eac5b903c1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the update is finished, run the `apt-get full-upgrade` command to update
    the system to the latest version:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/17b81c3f-afa3-4fc2-baca-b619b075005e.png)'
  prefs: []
  type: TYPE_IMG
- en: When asked to continue, press `Y` and then press *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we have our Kali Linux up to date and ready to continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Although Kali comes with a good set of tools preinstalled, there are some others
    that are included in its software repositories but not installed by default. To
    be sure we have everything we need for web application penetration testing, we
    install the `kali-linux-web` meta-package by entering the `apt-get install kali-linux-web` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/47dc9949-6ed5-40da-b24d-0aadca3f01e3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can find the tools we have installed in the Applications menu under 03 -
    Web Applications Analysis:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c8f7f30c-f4c2-410e-a92e-8d56978a6c38.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we have covered a basic procedure for package updates in Debian-based
    systems (such as Kali Linux) by using the standard software manager, `apt`. The
    first call to `apt-get` with the `update` parameter downloaded the most recent
    list of packages available for our specific system in the configured repositories.
    As Kali Linux is now a rolling distribution, this means that it is constantly
    updated and that there are no breaks between one version and the next; the `full-upgrade`
    parameter downloads and installs system (such as kernel and kernel modules) and
    non-system packages up to their latest version. If no major changes have been
    made, or we are just trying to keep an already installed version up to date, we
    can use the `upgrade` parameter instead.
  prefs: []
  type: TYPE_NORMAL
- en: In the last part of this recipe, we installed the `kali-linux-web` meta-package.
    A meta-package for `apt` is an installable package that contains many other packages,
    so we only need to install one package and all of the ones included will be installed.
    In this case, we installed all web penetration testing tools included in Kali
    Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the web browser for penetration testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most web penetration testing happens in the client, that is, in the web browser;
    hence, we need to prepare our browser to make it a useful tool for our purposes.
    In this recipe, we will do that by adding several plugins to the Firefox browser
    installed in Kali Linux by default.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Firefox is a very flexible browser that fits the purpose of web penetration
    testing very well; it also comes pre-installed in Kali Linux. Let''s customize
    it a little bit to make it better using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open Firefox and go to Add-ons in the menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/0dc93961-ca25-4df1-844f-b0572d45122d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the search box, type `wappalyzer` to look for the first plugin we will install:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/68c02cca-37dc-43fb-ac6d-1d5afc91eb55.png)'
  prefs: []
  type: TYPE_IMG
- en: Click Install in the Wappalyzer add-on to install it. You may also need to confirm
    the installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we search for `FoxyProxy`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Install.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now search for and install Cookies Manager+.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for and install HackBar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for and install HttpRequester.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for and install RESTClient.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for and install User-Agent Switcher.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for and install Tampermonkey.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for and install Tamper Data and Tamper Data Icon Redux.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The list of extensions installed should look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/1ec980d2-091a-4c5e-9b0a-2ea9a1d9129b.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far, we''ve just installed some tools in our web browser, but what are these
    tools good for when it comes to penetration testing a web application? The add-ons
    installed are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**HackBar**: A very simple add-on that helps us try different input values
    without having to change or rewrite the full URL. We will be using this a lot
    when doing manual checks for cross-site scripting and injections. It can be activated
    using the *F9* key.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cookies Manager+**: This add-on will allow us to view and sometimes modify
    the value of cookies the browser receives from the applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User-Agent Switcher**: This add-on allows us to modify the user-agent string
    (the browser identifier) that is sent in all requests to the server. Applications
    sometimes use this string to show or hide certain elements depending on the browser
    and operating system used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tamper Data**: This add-on has the ability to capture any request to the
    server just after it is sent by the browser, giving us the chance to modify the
    data after introducing it in the application''s forms and before it reaches the
    server. Tamper Data Icon Redux only adds an icon.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**FoxyProxy Standard**: A very useful extension that lets us change the browser''s
    proxy settings in one click using user-provided presets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wappalyzer**: This is a utility to identify the platforms and developing
    tools used in websites. This is very useful for fingerprinting the web server
    and the software it uses.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HttpRequester**: With this tool, it is possible to craft HTTP requests, including
    `get`, `post`, and `put` methods, and to watch the raw response from the server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RESTClient**: This is basically a request generator like HTTP requester,
    but focused on REST web services. It includes options to add headers, different
    authentication modes, and `get`, `post`, `put`, and `delete` methods.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tampermonkey**: This is an extension that will allow us to install user scripts
    in the browser and make on-the-fly changes to web page content before or after
    they load. From a penetration testing point of view, this is useful to bypass
    client-side controls and other client code manipulations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Other add-ons that could prove useful for web application penetration testing
    are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: XSS Me
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQL Inject Me
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iMacros
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FirePHP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a client virtual machine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we are ready to create our next virtual machine; it will be the server
    that will host the web applications we'll use to practice and improve our penetration
    testing skills.
  prefs: []
  type: TYPE_NORMAL
- en: We will use a virtual machine called **OWASP** **Broken Web Apps** (**BWA**),
    which is a collection of vulnerable web applications specially set up to perform
    security testing.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'OWASP BWA is hosted in SourceForge, a popular repository for open source projects.
    The following steps will help us in creating a vulnerable virtual machine:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to [http://sourceforge.net/projects/owaspbwa/files/](http://sourceforge.net/projects/owaspbwa/files/)
    and download the latest release of the `.ova` file. At the time of writing, it
    is `OWASP_Broken_Web_Apps_VM_1.2.ova`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/b355afda-f950-47e5-b3dc-72dc6d2bfc83.png)'
  prefs: []
  type: TYPE_IMG
- en: Wait for the download to finish and then open the file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'VirtualBox''s import dialog will launch. If you want to change the machine''s
    name or description, you can do so by double-clicking on the values. Here, you
    can change the name and options for the virtual machine; we will leave them as
    they are. Click on Import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/4a82e85a-d26a-49e0-a612-12e493159e0f.png)'
  prefs: []
  type: TYPE_IMG
- en: The import should take a minute and, after that, we will see our virtual machine
    displayed in VirtualBox's list. Let's select it and click on Start.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the machine starts, we will be asked for a login and password; type `root`
    as the login, and `owaspbwa` as the password, and we are set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OWASP BWA is a project aimed at providing security professionals and enthusiasts
    with a safe environment to develop attacking skills and identify and exploit vulnerabilities
    in web applications, in order to be able to help developers and administrators
    fix and prevent them.
  prefs: []
  type: TYPE_NORMAL
- en: This virtual machine includes different types of web applications; some of them
    are based
  prefs: []
  type: TYPE_NORMAL
- en: on PHP, some in Java. We even have a couple of .NET-based vulnerable applications.
    There
  prefs: []
  type: TYPE_NORMAL
- en: are also some vulnerable versions of known applications, such as WordPress or
    Joomla.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many options when we talk about vulnerable applications and virtual
    machines. A remarkable website that holds a great collection of such applications
    is VulnHub ([https://www.vulnhub.com/](https://www.vulnhub.com/)). It also has
    walkthroughs that will help you to solve some challenges and develop your skills.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this book, we will use another virtual machine for some recipes, bWapp bee-box,
    which can be downloaded from the project''s site: [https://sourceforge.net/projects/bwapp/files/bee-box/](https://sourceforge.net/projects/bwapp/files/bee-box/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are also virtual machines that are thought of as self-contained web penetration
    testing environments, in other words, they contain vulnerable web applications,
    but also the tools for testing and exploiting the vulnerabilities. A couple of
    other relevant examples are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Samurai web testing framework: [https://sourceforge.net/projects/samurai](https://sourceforge.net/projects/samurai)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Web Security Dojo: [https://www.mavensecurity.com/resources/web-security-dojo](https://www.mavensecurity.com/resources/web-security-dojo)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring virtual machines for correct communication
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To be able to communicate with our virtual server and client, we need to be
    in the same network segment; however, having virtual machines with known vulnerabilities
    in our local network may pose an important security risk. To avoid this risk,
    we will perform a special configuration in VirtualBox to allow us to communicate
    with both server and client virtual machines from our Kali Linux host without
    exposing them to the network.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we proceed, open VirtualBox and make sure that the vulnerable server
    and client virtual machines are turned off.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'VirtualBox creates virtual network adapters in the base system in order to
    manage DHCP and virtual networks. These adapters are independent from the ones
    assigned to virtual machines; we will create a virtual network and add the Kali
    and vulnerable virtual machines to it by using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In VirtualBox, navigate to File | Preferences... | Network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Host-only Networks tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the plus (+) button to add a new network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The new network (`vboxnet0`) will be created and its details window will pop
    up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this dialog box, you can specify the network configuration; if it doesn't
    interfere with your local network configuration, leave it as it is. You may change
    it and use some other address in the segments reserved for local networks (`10.0.0.0/8`,
    `172.16.0.0/12`, `192.168.0.0/16`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, go to the DHCP Server tab; here, we can configure the dynamic IP address
    assignation in the host-only network. We''ll start our dynamic addressing at `192.168.56.10`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/4a32d6c5-4169-401b-8069-05c78d6d385b.png)'
  prefs: []
  type: TYPE_IMG
- en: After proper configuration is done, click OK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next step is to configure the vulnerable virtual machine (`vm_1`). Select
    it and go to its Settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Network and, in the Attached to: drop-down menu, select Host-only Adapter.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In Name, select `vboxnet0`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click OK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Follow *steps 8* to* 11* for the Kali virtual machine (`Kali Linux 2018.1`)
    and all of the testing machines you want to include in your lab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After configuring all virtual machines, let''s test whether they can actually
    communicate. Let''s see the network configuration of our Kali machine; open a
    Terminal and type:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](assets/a4a970f0-ea27-45ea-b05f-73baf363aa38.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see that we have a network adapter called eth0 and it has the IP address
    `192.168.56.10`. Depending on the configuration you used, this may vary.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For `vm_1`, the network address is displayed on the start screen, although
    you can also check the information by logging in and using `ifconfig`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/45f233c5-cc7a-4fd5-9897-8a44c2424d9f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, we have the IP addresses of our three machines: `192.168.56.10` for Kali
    Linux, and `192.168.56.11` for the vulnerable `vm_1`. Let''s test the communication;
    we are going to `ping vm_ 1` from our Kali Linux:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](assets/8b2384c0-2e4b-46c5-80f1-4ac98e65d154.png)Ping sends an ICMP request
    to the destination and waits for the reply; this is useful to test whether communication
    is possible between two nodes in the network.'
  prefs: []
  type: TYPE_NORMAL
- en: We do the same to and from all of the virtual machines in our laboratory to
    check whether they can communicate with each other.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Windows desktop systems, like Windows 7 and Windows 10, may not respond to
    pings; that''s normal because Windows 7 is configured by default to not respond
    to ping requests. To check connectivity in this case, if you have Windows machines
    in your lab, you can use `arping` from the Kali machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A host-only network is a virtual network that acts as a LAN, but its reach is
    limited to the host that is running the virtual machines without exposing them
    to external systems. This kind of network also provides a virtual adapter for
    the host to communicate with the virtual machines as if they were in the same
    network segment.
  prefs: []
  type: TYPE_NORMAL
- en: With the configuration we just made, we will be able to communicate between
    the machine that will take the roles of client and attacking machine in our tests
    and the web server that will host our target applications.
  prefs: []
  type: TYPE_NORMAL
- en: Getting to know web applications on a vulnerable virtual machine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OWASP BWA contains many web applications, intentionally rendered vulnerable
    to the most common attacks. Some of them are focused on the practice of some specific
    technique,
  prefs: []
  type: TYPE_NORMAL
- en: while others try to replicate real-world applications that happen to have vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will take a tour of our `vulnerable_vm` and get to know some
    of the applications it includes.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We need to have our `vulnerable_vm` running and its network correctly configured.
    For this book, we will be using `192.168.56.10` as its IP address.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The steps that need to be performed are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'With `vm_1` running, open your Kali Linux host''s web browser and go to `http://192.168.56.10`.
    You will see a list of all the applications that the server contains:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/8f261853-50f0-4fa1-96af-b6e59803878a.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's go to Damn Vulnerable Web Application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use `admin` as a username and `admin` as a password. We can see a menu on the
    left; this menu contains links to all the vulnerabilities that we can practice
    in this application: Brute Force, Command Execution, SQL Injection, and so on.
    Also, the DVWA Security section is where we can configure the security (or complexity)
    levels of the vulnerable inputs:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c63a3910-43d3-4002-ba13-cf2fa8a71751.png)'
  prefs: []
  type: TYPE_IMG
- en: Log out and return to the server's homepage.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, we click on OWASP WebGoat.NET. This is a .NET application where we will
    be able to practice file and code injection attacks, cross-site scripting, and
    encryption vulnerabilities. It also has a WebGoat Coins Customer Portal that simulates
    a shopping application and can be used to practice not only the exploitation of
    vulnerabilities, but also their identification:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/9cc4614c-06fb-4b5e-9414-4642f7109ded.png)'
  prefs: []
  type: TYPE_IMG
- en: Now return to the server's home page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Another interesting application included in this virtual machine is BodgeIt,
    which is a minimalistic version of an online store based on JSP. It has a list
    of products that we can add to a shopping basket, a search page with advanced
    options, a registration form for new users, and a login form. There is no direct
    reference to vulnerabilities; instead, we will need to look for them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/c86ca94d-45ca-4073-b565-e98367e741ba.png)'
  prefs: []
  type: TYPE_IMG
- en: We won't be able to look at all the applications in a single recipe, but we
    will be using some of them in this book.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The applications in the home page are organized in the following six groups:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Training applications**: These are the ones that have sections dedicated
    to'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: practice-specific vulnerabilities or attack techniques; some of them include
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: tutorials, explanations, or other kinds of guidance.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Realistic, intentionally vulnerable applications**: Applications that act
    as real-world applications (stores, blogs, and social networks) and are intentionally
    left vulnerable by their developers for the sake of training.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Old (vulnerable) versions of real applications**: Old versions of real applications,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: such as WordPress and Joomla, are known to have exploitable vulnerabilities;
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: these are useful to test our vulnerability identification skills.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Applications for testing tools**: The applications in this group can be used
    as benchmarks for automated vulnerability scanners.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Demonstration pages/small applications**: These are small applications that
    have only one or a few vulnerabilities, for demonstration purposes only.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OWASP demonstration application**: OWASP AppSensor is an interesting application;
    it simulates a social network and could have some vulnerabilities in it. But it
    will log any attack attempts, which is useful when trying to learn, for example,
    how to bypass some security devices such as a web application firewall.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Even though OWASP BWA is one of the most complete collections of vulnerable
    web applications for testing purposes, there are other virtual machines and web
    applications that could complement it as they contain different applications,
    frameworks, or configurations. The following are worth a try:'
  prefs: []
  type: TYPE_NORMAL
- en: OWASP Bricks, included in BWA, also has an online version: [http://sechow.com/bricks/index.html](http://sechow.com/bricks/index.html).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hackazon ([http://hackazon.webscantest.com/](http://hackazon.webscantest.com/))
    is an online testing range meant to simulate a modern web application. According
    to its Wiki ([https://github.com/rapid7/hackazon/wiki](https://github.com/rapid7/hackazon/wiki)),
    it can also be found as a virtual machine OVA file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Acunetix's Vulnweb ([http://www.vulnweb.com/](http://www.vulnweb.com/)) is a
    collection of vulnerable web applications, each one using a different technology
    (PHP, ASP, JSP, HTML5) created to test the effectiveness of the Acunetix web vulnerability
    scanner.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testfire ([http://testfire.net/](http://testfire.net/)) is published by Watchfire
    and simulates an online banking application. It uses the .NET framework.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hewlett Packard also has a public testing site created to demonstrate the effectiveness
    of its Fortify WebInspect products; it is called ZeroBank ([http://zero.webappsecurity.com/](http://zero.webappsecurity.com/)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
