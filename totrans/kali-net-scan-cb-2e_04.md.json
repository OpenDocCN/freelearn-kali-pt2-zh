["```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n\n        from scapy.all import *\n        import time\n        import sys\n\n        if len(sys.argv) != 4:\n          print \"Usage - ./udp_scan.py [Target-IP] [First Port]\n            [Last Port]\"\n          print \"Example - ./upd_scan.py 10.0.0.5 1 100\"\n          print \"Example will UDP port scan ports 1 through\n            100 on 10.0.0.5\"\n          sys.exit()\n        else:\n          ip = sys.argv[1]\n          start = int(sys.argv[2])\n          end = int(sys.argv[3])\n\n        for port in range(start,end):\n          ans = sr1(IP(dst=ip)/UDP(dport=port),timeout=5,verbose =0)\n          time.sleep(1)\n          if ans == None:\n            print port\n          else:\n            pass\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n\n        from scapy.all import *\n        import sys\n\n        if len(sys.argv) != 4:\n            print \"Usage - ./syn_scan.py [Target-IP] [First Port]\n              [Last Port]\"\n            print \"Example - ./syn_scan.py 10.0.0.5 1 100\"\n            print \"Example will TCP SYN scan ports 1 through\n              100 on 10.0.0.5\"\n            sys.exit()\n        else:\n            ip = sys.argv[1]\n            start = int(sys.argv[2])\n            end = int(sys.argv[3])\n\n        for port in range(start,end):\n            ans = sr1(IP(dst=ip)/TCP(dport=port),timeout=1,verbose =0)\n            if ans == None:\n                pass\n            else:\n                if int(ans[TCP].flags) == 18:\n                    print port\n                else:\n                    pass\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        response = sr1(IP(dst=\"172.16.69.128\")/TCP(dport=80,flags='S'))\n        reply = sr1(IP(dst=\"172.16.69.128\")\n        /TCP(dport=80,flags='A',ack=(response[TCP].seq + 1)))\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        SYN = IP(dst=\"172.16.69.128\")/TCP(dport=80,flags='S')\n\n        print \"-- SENT --\"\n        SYN.display()\n\n        print \"nn-- RECEIVED --\"\n        response = sr1(SYN,timeout=1,verbose=0)\n        response.display()\n\n        if int(response[TCP].flags) == 18:\n            print \"nn-- SENT --\"\n            ACK = IP(dst=\"172.16.69.128\")/\n            TCP(dport=80,flags='A',ack=(response[TCP].seq + 1))\n            response2 = sr1(ACK,timeout=1,verbose=0)\n            ACK.display()\n            print \"nn-- RECEIVED --\"\n            response2.display()\n        else:\n            print \"SYN-ACK not returned\"\n\n```", "```\n        #!/usr/bin/python\n\n        import logging\n        logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n        from scapy.all import *\n\n        response = sr1(IP(dst=\"172.16.36.135\")/\n        TCP(dport=4444,flags='S'))\n        reply = sr1(IP(dst=\"172.16.36.135\")/\n        TCP(dport=4444,flags='A',ack=(response[TCP].seq + 1)))\n\n```", "```\n       #!/usr/bin/python\n\n       import logging\n       logging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\n       from scapy.all import *\n\n       def ipid(zombie):\n           reply1 = sr1(IP(dst=zombie)\n           /TCP(flags=\"SA\"),timeout=2,verbose=0)\n           send(IP(dst=zombie)/TCP(flags=\"SA\"),verbose=0)\n           reply2 = sr1(IP(dst=zombie)\n           /TCP(flags=\"SA\"),timeout=2,verbose=0)\n           if reply2[IP].id == (reply1[IP].id + 2):\n               print \"IPID sequence is incremental and target appears \n                 to be idle. ZOMBIE LOCATED\"\n               response = raw_input(\"Do you want to use this zombie to \n                 perform a scan? (Y or N): \")\n               if response == \"Y\":\n                   target = raw_input(\"Enter the IP address of the\n                     target system: \")\n                   zombiescan(target,zombie)\n           else:\n               print \"Either the IPID sequence is not incremental or \n                 the target is not idle. NOT A GOOD ZOMBIE\"\n\n       def zombiescan(target,zombie):\n           print \"nScanning target \" + target + \" with zombie \"\n            + zombie\n           print \"n---------Open Ports on Target--------n\"\n           for port in range(1,100):\n                try:\n                   start_val = sr1(IP(dst=zombie)\n                   /TCP(flags=\"SA\",dport=port),timeout=2,verbose=0)\n                   send(IP(src=zombie,dst=target)\n                   /TCP(flags=\"S\",dport=port),verbose=0)\n                   end_val = sr1(IP(dst=zombie)\n                   /TCP(flags=\"SA\"),timeout=2,verbose=0)\n       if end_val[IP].id == (start_val[IP].id + 2):\n          print port\n       except:\n           pass\n\n       print \"-----------Zombie Scan Suite------------n\"\n       print \"1 - Identify Zombie Hostn\"\n       print \"2 - Perform Zombie Scann\"\n       ans = raw_input(\"Select an Option (1 or 2): \")\n       if ans == \"1\":\n           zombie = raw_input(\"Enter IP address to test\n            IPID sequence: \")\n           ipid(zombie)\n       else:\n           if ans == \"2\":\n           zombie = raw_input(\"Enter IP address for zombie system: \")\n           target = raw_input(\"Enter IP address for scan target: \")\n           zombiescan(target,zombie)\n\n```"]