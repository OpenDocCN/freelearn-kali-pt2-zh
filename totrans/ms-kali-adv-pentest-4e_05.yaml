- en: '5'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Advanced Social Engineering and Physical Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Social engineering is a method of manipulating humans to extract information
    or perform malicious activity by interacting with them. It is the most effective
    attack that has made many great organizations succumb to security incidents. Attackers
    may choose single or multiple ways to target individuals by exploiting human psychology,
    which can effectively trick a human into providing physical access to a system.
    It is the single most successful attack vector used during red teaming exercises,
    penetration testing, or in an actual attack. The success of a social engineering
    attack relies on two key factors:'
  prefs: []
  type: TYPE_NORMAL
- en: The knowledge that is gained during the reconnaissance phase. The attacker must
    know the names and usernames associated with the target; more importantly, the
    attacker must understand the concerns of the users on the network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Understanding how to apply this knowledge to convince potential targets to
    activate the attack by impersonating an authority, talking to them over the phone,
    inquiring about them, encouraging them to click links, or executing a program.
    In recent years, the following two tactics have been the most successful:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the targeted company has recently finished their yearend appraisal, every
    employee in the company would be very much focused on receiving their updated
    salary package from the Human Resources department. Therefore, emails or documents
    with titles associated with that subject will likely be opened by the targeted
    individuals.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If the targeted company had acquired or merged with another, the type of social
    engineering attack would be whaling, targeting C-level managers and other high-profile
    individuals in both companies. The main principle behind this type of attack is
    that more privileges the user has, the more access the attackers can gain.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali Linux provides several tools and frameworks that have an increased chance
    of success if social engineering is used as a pretext to influence victims to
    open files or execute certain operations. The examples include file-based executables,
    created by the Metasploit framework, and using file-less techniques, such as PowerShell
    scripts using Empire 3.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will explore some **Tactics, Techniques, and Procedures**
    (**TTPs**) and take a deep dive into utilizing the **Social Engineering Toolkit**
    (also known as **SET** and **SEToolkit**) and **Gophish**. The techniques used
    in employing these tools will serve as the model for using social engineering
    to deploy attacks from other tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will have learned the following concepts and
    methods:'
  prefs: []
  type: TYPE_NORMAL
- en: The different social engineering attack methods that can be engaged by attackers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to perform physical attacks at the console
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating rogue physical devices using microcontrollers and USBs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harvesting or collecting usernames and passwords using the credential harvester
    attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching the Tabnabbing and Web Jacking attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Employing the Multi-Attack web method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using PowerShell’s alphanumeric shellcode injection attack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to set up Gophish on Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching an email phishing campaign
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To support SET’s social engineering attacks, the following general implementation
    practices will also be described:'
  prefs: []
  type: TYPE_NORMAL
- en: Hiding malicious executables and obfuscating the attacker’s URL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Escalating an attack using DNS redirection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaining access to the system and network through a USB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Command methodology and TTPs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As an attack route supporting the cyber kill chain methodology, social engineering
    focuses on the different aspects of an attack that take advantage of a person’s
    trust and innate helpfulness, to deceive and manipulate them into compromising
    a network and its resources.
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 5.1* depicts the different types of attack methods that attackers can
    engage in to harvest information and/or gain access.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.1: Different types of social engineering tactics'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the previous editions of this book, we have now reclassified social engineering
    tactics into two main categories: one that involves technology, and another that
    includes people-specific techniques. The following sections will provide a briefing
    on the two categories; later on, we will explore computer-based attacks, especially
    physical attacks and email phishing using Kali Linux.'
  prefs: []
  type: TYPE_NORMAL
- en: Technology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As technology has evolved from traditional PCs to laptops and mobile phones,
    so have social engineering techniques. In this section, we will discuss the computer-
    and mobile-based attacks that can be performed using Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Computer-based
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Attacks that utilize computers to perform social engineering are subdivided
    into the following types. All of these are best utilized only when all passive
    and active reconnaissance information is utilized to the maximum:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Email phishing**: Attacks that utilize the email medium to harvest information
    or exploit a known software vulnerability in the victim’s system are referred
    to as email phishing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Baiting/Quid Pro Quo**: This is a technique that is used to embed a known
    vulnerability and create a backdoor, achieved by utilizing USB sticks and CDs.
    Baiting has more of a focus on exploiting the human curiosity factor through the
    use of physical media. Attackers can create a Trojan that will provide backdoor
    access to the system, either by utilizing the autorun feature, or when a user
    clicks to open the files inside the drive. Quid Pro Quo is similar to Baiting,
    but in this case, the victim gets something in exchange for the Trojan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wi-Fi phishing**: Penetration testers can utilize this technique to harvest
    usernames and passwords by setting up a fake Wi-Fi network, similar to the targeted
    company. For example, the attackers could target a company by setting the SSID
    in their Wi-Fi to the exact same (or something similar) to a company’s, allowing
    users to connect without any password to the fake wireless router. We will explore
    more about these attacks in *Chapter 6*, *Wireless and Bluetooth Attacks*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile-based
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Mobile-based attacks have become an easy way to capture confidential information
    or try to collect other important details that might serve for the goal of penetration
    testing or a **Red Team Exercise** (**RTE**). We will discuss the two most commonly
    used mobile-based attacks that are deployed by attackers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**SMSishing**: Attackers perform phishing using **Short Message Service** (**SMS**)
    by sending links or drafting a message that allows the user to click on a link
    or reply to the text. Penetration testers can also utilize publicly offered services,
    such as [https://www.spoofmytextmessage.com/free](https://www.spoofmytextmessage.com/free).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quick Response Code** (**QR code**)**:** During a red team exercise, QR codes
    are also the most effective way to deliver a payload to an isolated area. Similar
    to spamming, QR codes with a message of winning bounty or with the latest news
    (like free Covid-19 vaccine registration) can be printed and posted in places
    where most people visit, for example, cafeterias, smoking zones, toilets, and
    other rush areas.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: People-based
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: People-based attacks are the most effective type of attack during a red team
    exercise or penetration test. These attacks are focused on the behavior of people
    in a given situation. The following sections explain the different types of attack
    that can be performed by focusing on people’s weaknesses and the different tactics
    used to exploit them.
  prefs: []
  type: TYPE_NORMAL
- en: Physical attacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Physical attacks typically involve the physical existence of an attacker, who
    then performs a social engineering attack. The following are the two types of
    physical attacks that are engaged during an **RTE** or penetration test:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Impersonation or pretexting**: This involves the testers creating a script
    and impersonating an important person to harvest information from a targeted set
    of staff. We recently performed a social engineering attack with the goal of identifying
    the username and password of a domain user through a physical social engineering
    exercise. The scenario involves an attacker talking to the victim and impersonating
    the internal IT helpdesk, *“Dear Mr. X, I am Mr. Y from the internal IT department.
    It has been noted that your system has been disconnected from the network for
    a period of 20 days. It is recommended to install the latest system updates due
    to the latest ransomware attack. Do you mind providing the laptop along with your
    username and password?”* That resulted in the user providing the login details
    and, as a bonus, passing on the laptop to the attacker. The attacker’s next move
    is to plant a backdoor into the system to maintain persistent access.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Attacks at the console**: These involve all attacks that involve physical
    access to the system, such as changing the password of an administrator user,
    planting a keylogger, extracting stored browser passwords, or the installation
    of backdoor.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Voice-based
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Any attack that involves a voice message and tricks the user into performing
    an action on a computer or leaking sensitive information is referred to as voice-based
    social engineering.
  prefs: []
  type: TYPE_NORMAL
- en: '**Vishing** is the art of utilizing a recorded voice message or an individual
    calling the victim to extract information from a targeted victim or group of victims.
    Typically, vishing involves a trustable script, for example, if *Company X* announces
    a new joint venture with *Company Y*, the staff will be curious about the future
    of both companies. This allows the attackers to call the victim directly with
    a pre-defined script, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: “Hello, I am Mr. X calling from Company Y. We have now been announced as partaking
    in a joint venture, so technically we are all on the same team. Can you please
    let me know where your data centers are located, and provide me with list of mission-critical
    servers? If you are not the right person, can you point me to the right one? Many
    thanks, Mr. X”.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Very well-done vishing can lead attackers not only to gain access to confidential
    information but also remain stealthy and avoid unwanted attention. Let us discuss
    the next important attack, gaining access to physical devices.
  prefs: []
  type: TYPE_NORMAL
- en: Physical attacks at the console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will explore different types of attack that are typically
    performed on a system where physical access is possible.
  prefs: []
  type: TYPE_NORMAL
- en: samdump2 and chntpw
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One of the most popular ways to dump password hashes is to utilize `samdump2`.
    This can be done by turning on the power of the acquired system and then booting
    it through our Kali USB stick by making the required changes in the BIOS (say,
    in Lenovo, one can press *F12* to bring up the boot menu and select the USB):'
  prefs: []
  type: TYPE_NORMAL
- en: Once the system is booted through Kali, by default the local hard drive must
    be mounted as a media drive (assuming the media drive is not encrypted with BitLocker
    or something similar), as shown in *Figure 5.2*:![](../Images/B17765_05_02.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.2: All mounted disks on Kali Linux'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If the drive is not mounted by default, the attackers can manually mount the
    drive by running the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Once the system is mounted, navigate to the mounted folder (in our case, it
    is `/media/root/<ID>/Windows/System32/Config`), and run `samdump2 SYSTEM SAM`,
    as shown in *Figure 5.3*. The `SYSTEM` and `SAM` files should display all the
    users on the system drive, along with their password hashes, which will then be
    used to crack the password offline using the `John` (John the Ripper) or `hashcat`
    tools.![](../Images/B17765_05_03.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.3: Output of samdump2 with the password hashes'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Using the same access, attackers can also remove the password of a user from
    the system. `chntpw` is a Kali Linux tool that can be used to edit the Windows
    registry, reset a user’s password, and promote a user to as an administrator,
    as well as several other useful options. Using `chntpw` is a great way to reset
    a Windows password, or otherwise gain access to a Windows machine when the password
    is unknown.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`chntpw` is a utility to view information and change user passwords in Windows
    NT/2000, XP, Vista, 7, 8.1, 10, and other Windows servers with the ability to
    boot the device with an external drive.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The SAM user database file is usually located at `\WINDOWS\system32\config\SAM`
    on the Windows filesystem. Navigate to folder, as shown in *Figure 5.4*:![](../Images/B17765_05_04.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.4: All the files from Windows system32 config folder'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Run `chntpw SAM`; the password is stored in the `SAM` file in Windows. **Security
    Accounts Manager** (**SAM**) is a database file in Windows XP, Windows Vista,
    and Windows 7 that stores users’ passwords.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The SAM file can be used to authenticate local and remote users. Usually, the
    `SAM` file is located in `C/Windows/system32/config/SAM`:'
  prefs: []
  type: TYPE_NORMAL
- en: Enter `chntpw -i SAM` in the Kali Linux terminal from `/media/root/<ID>/Windows/System32/Config`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select `1 – edit user data and passwords`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the `RID` of the user, in this case `03ef`, as shown in *Figure 5.5*:![](../Images/B17765_05_05.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.5: Interactive terminal using chntpw to edit SAM file'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Select `1 – clear (blank) user password`, and then enter `q` to complete the
    task. Enter `y` for `write hive` `files`. Finally, you should be able to get a
    confirmation like this: `<SAM> - OK`. *Figure 5.6* shows the edited SAM file contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.6: Final SAM file edit confirmation that our password was set to blank'
  prefs: []
  type: TYPE_NORMAL
- en: In Windows 10, a reboot of the system will contain `hyberfile.sys`, which will
    not allow the attackers to mount the system drive. To mount the system drive and
    gain access to the drive, use `mount -t ntfs-3g -ro remove_hiberfile /dev/sda2
    /mnt/folder`. Note that some systems with endpoint encryption tools such as BitLocker
    or any other vendor may not be able to boot after this file is deleted.
  prefs: []
  type: TYPE_NORMAL
- en: Other bypassing tools include Kon-boot, which is another forensics utility that
    utilizes a similar feature to `chntpw`. Kon-boot only affects the administrator
    account and doesn’t remove the administrator’s password; it just lets you log
    in without a password, and on the next normal system reboot, the original administrator’s
    password is in place, intact.
  prefs: []
  type: TYPE_NORMAL
- en: 'This tool can be downloaded from this website: [https://www.piotrbania.com/all/kon-boot/](https://www.piotrbania.com/all/kon-boot/).'
  prefs: []
  type: TYPE_NORMAL
- en: Sticky Keys
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will explore how to utilize physical access to the console
    of a Windows computer that is unlocked or without a password. Attackers can exploit
    the feature of Microsoft Windows Sticky Keys to plant a backdoor in a fraction
    of a second; however, the caveat is that you will need to have administrator privileges
    to place the executable. But when the system is booted through Kali Linux, the
    attackers can place the files without any restrictions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a list of Windows utilities that can be utilized by attackers
    to replace utility executables with `cmd.exe` or `powershell.exe`:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sethc.exe`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`utilman.exe`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`osk.exe`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`narrator.exe`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`magnify.exe`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`displayswitch.exe`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following steps are involved in replacing `sethc.exe` with `cmd.exe`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*Figure 5.7* shows the backdoor of `cmd.exe`, when we hit the *Shift* key five
    times to invoke `sethc.exe`. However, Command Prompt will appear as we replaced
    the `cmd.exe` with `sethc.exe`.'
  prefs: []
  type: TYPE_NORMAL
- en: '![A picture containing text, electronics, computer, computer  Description automatically
    generated](../Images/B17765_05_07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.7: Backdoor display of Sticky Keys (sethc.exe) running Command Prompt
    (cmd.exe)'
  prefs: []
  type: TYPE_NORMAL
- en: We have explored how to clear a Windows 10 local user’s password and also set
    a backdoor through legitimate Windows programs.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a rogue physical device
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kali also facilitates attacks where the intruder has direct physical access
    to systems and the network. This can be a risky attack, as the intruder may be
    spotted by an observant human or caught on a surveillance device. However, the
    rewards can be significant because the intruder can compromise specific systems
    that have valuable data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Physical access is usually a direct result of social engineering, especially
    when impersonation is used. Common impersonations include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A person who claims to be from the help desk or IT support and just needs to
    quickly interrupt the victim by installing a system upgrade.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A vendor who drops by to talk to a client, and then excuses himself to talk
    to someone else or visit a restroom.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A delivery person dropping off a package. Attackers can buy a delivery uniform
    online; however, since most people assume that anyone who is dressed all in brown
    and pushing a handcart filled with boxes is a UPS delivery person, uniforms are
    rarely a necessity for social engineering!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trade persons wearing work clothes, carrying a work order that they have printed
    out, are usually allowed access to wiring closets and other areas, especially
    when they claim to be present at the request of the building manager.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dress in an expensive suit, carry a clipboard, and walk fast; employees will
    assume that you’re an unknown manager. When conducting this type of penetration,
    we usually inform people that we are auditors, and our inspections are rarely
    questioned.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The goal of hostile physical access is to rapidly compromise selected systems;
    this is usually accomplished by installing a backdoor or similar device on the
    target. One of the classic attacks is to place a USB key (in the form of keyboard/mouse)
    in a system and let the system install it using the AutoPlay option; however,
    many organizations disable AutoPlay across the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Attackers can also create poisoned bait traps: mobile devices that contain
    files with names that invite a person to click on the file and examine its contents.
    Some examples include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: USB keys with labels such as “Employee Salaries”, “Medical Insurance Updates”,
    or “Covid-19 exit strategy”.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploit allows an attacker to bind a payload, such as a reverse shell, to
    an executable, such as a screensaver. The attacker can create a screensaver using
    publicly available corporate images, and mail USBs to employees with the new endorsed
    screensaver. When the user installs the program, the backdoor is also installed
    and it connects to the attacker.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you know that employees have attended a recent conference, attackers can
    impersonate a vendor who was present and send the target a letter insinuating
    that it is a follow-up from the vendor show. A typical message will be, *“If you
    missed our product demonstration and one-year free trial, please review the slideshow
    on the attached USB key by clicking on start.exe.”*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microcomputer or USB-based attack agents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have noticed a significant increase in using microcomputers and USB-based
    devices in RTE/penetration testing. These are mainly used due to their compactness;
    they can be hidden anywhere on the network and also can run almost anything that
    a full-fledged laptop can. In this section, we will explore the most commonly
    used devices, the Raspberry Pi and MalDuino USB.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Raspberry Pi is a microcomputer; it measures approximately 8.5 cm by 5.5
    cm but manages to pack 2-8 GB RAM, two USB 2.0 or two USB 3.0 ports, and an Ethernet
    port supported by a Broadcom chip, using a 64-bit quad-core CPU, running at 1.5GHz,
    with the support of Wi-Fi and Bluetooth. It doesn’t include a hard drive but uses
    an SD card for data storage. As shown in *Figure 5.8*, the Raspberry Pi is approximately
    pocket sized; it is easy to hide on a network (behind workstations or servers,
    placed inside server cabinets, or hidden beneath floor panels in a data center).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.8: Photo of assembled Raspberry Pi 4'
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure a Raspberry Pi as an attack vector, the following items are required:'
  prefs: []
  type: TYPE_NORMAL
- en: A Raspberry Pi Model B, or newer versions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An HDMI cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A micro-USB cable and charging block
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Ethernet cable or mini-wireless adapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card, Class 10, at least 16 GB in size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Together, all these supplies are typically available online for a total of
    less than $100\. The following are the steps to configure the Raspberry Pi with
    latest version of Kali Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: To configure the Raspberry Pi, download the latest version of the Kali Linux
    ARM edition from [https://www.kali.org/get-kali/#kali-arm](https://www.kali.org/get-kali/#kali-arm).
    Extract it from the source archive. If you are configuring from a Windows-based
    desktop, then we would utilize the same Rufus utility as utilized in *Chapter
    1*, *Goal-Based Penetration Testing*, to make a bootable Kali USB stick.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Using a card reader, connect the SD card to the Windows-based computer and
    open the Rufus utility. Select the ARM version of Kali, `kali-custom-rpi.img`,
    which was downloaded and extracted previously, and write it to the SD card. Separate
    instructions for flashing the SD card from Mac or Linux systems are available
    on the Kali website: [https://www.kali.org/docs/usb/live-usb-install-with-mac/](https://www.kali.org/docs/usb/live-usb-install-with-mac/).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the newly flashed SD card into the Raspberry Pi and connect the Ethernet
    cable or wireless adapter to the Windows workstation, the HDMI cable to a monitor,
    and the micro-USB power cable to a power supply, a keyboard, and a mouse. Once
    supplied with power, it will boot directly into Kali Linux. The Raspberry Pi relies
    on external power, and there is no separate on/off switch; however, Kali can still
    be shut down from the command line by running `halt` in the terminal. Once Kali
    is installed, ensure that it is up to date using the `apt update` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Make sure the SSH host keys are changed as soon as possible, as all Raspberry
    Pi images have the same keys. Use the following commands in the Kali Linux terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: At the same time, make sure the default username and password are changed by
    running `sudo passwd kali` in the terminal.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Configure the Raspberry Pi to connect back to the attacker’s computer (using
    a static IP address or using DynDNS) at regular intervals using a `cron` job.
    An attacker must then physically access the target’s premises and connect the
    Raspberry Pi to the network. Most networks automatically assign devices a DHCP
    address and have limited defences against this type of attack.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the Raspberry Pi connects back to the attacker’s IP address, the attacker
    can run reconnaissance and exploit applications against the victim’s internal
    network from a remote location, using SSH to issue commands.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If a wireless adapter is connected, such as EW-7811Un V2, the 150 Mbps wireless
    802.11b/g/n Nano USB adapter, the attacker can connect wirelessly or use the Pi
    to launch wireless attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'MalDuino: the BadUSB'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: MalDuino is an Arduino-powered USB that can be used by attackers during an RTE/penetration
    testing activity. This device has a keyboard injection capability and runs the
    commands within a fraction of a second. These devices are extremely useful during
    physical security with access to the organization’s building. Often, people inside
    the organization rarely lock their computer, assuming the physical access restrictions
    are safeguards and no one would do anything. Even if attackers gain access physically
    to the system, staff can arguably say “we have no USB policy;” well, it’s a good
    point. But disabling a USB does not disable USB-based keyboards—when attackers
    plug in MalDuino, it acts as a keyboard, typing commands exactly how a human being
    would run a specified payload and execute it.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two flavors of MalDuino: Elite and Lite. The difference is that Elite
    provides an SD card option for you to dump around 16 different payloads with the
    hardware switches on the device, so that you don’t need to reconfigure the entire
    device. With MalDuino Lite, you have to configure the device every time you change
    the payload.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The board supports the Ducky Script templates, making it easy to build custom
    scripts. *Figure 5.9* depicts the MalDuino Elite hardware:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.9: MalDuino as USB'
  prefs: []
  type: TYPE_NORMAL
- en: Instructions on how to set up the board can be found at [https://malduino.com/wiki/doku.php?id=setup:elite](https://malduino.com/wiki/doku.php?id=setup:elite).
  prefs: []
  type: TYPE_NORMAL
- en: 'We will focus on setting up an Empire PowerShell script for the board by following
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Generate the PowerShell payload in Empire (refer to *Chapter 10*, *Exploitation*).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure the listeners are up and listening for any connections.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Convert the PowerShell launcher into strings; since MalDuino has a buffer size
    of 256 bytes, the payloads must be fragmented. This can be achieved by visiting
    [https://malduino.com/converter/](https://malduino.com/converter/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the strings are converted, it should look something like that shown in
    *Figure 5.10*:![](../Images/B17765_05_10.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.10: Organizing the strings to match the limit of 254 characters per
    line'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The next step is to build the payload into a script, as shown in *Figure 5.11*:![](../Images/B17765_05_11.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.11: Loading the payload into MalDuino'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The final action is to plug the device into the victim machine; you should now
    be able to see an agent reporting back, as shown in *Figure 5.12*:![](../Images/B17765_05_12.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.12: Successful connection from MalDuino to our Empire listener'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We have learned how to utilize the purpose-built MalDuino USB to launch a reverse
    shell to the attackers. One other scenario that attackers can utilize is dropping
    these devices in target locations, such as a cafeteria, or even courier these
    to the company CEO’s personal assistant with a high-alert message from a court
    or regulatory authority; the curiosity or the fear of the victim gets the job
    done for the attackers.
  prefs: []
  type: TYPE_NORMAL
- en: The Social Engineering Toolkit (SET)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SET was created and written by David Kennedy (`@ReL1K`), founder of trustedsec,
    and it is maintained by an active group of collaborators (`www.social-engineer.org`).
    It is an open-source Python-driven framework that is specifically designed to
    facilitate social engineering attacks.
  prefs: []
  type: TYPE_NORMAL
- en: The tool was designed with the objective of achieving security by training.
    A significant advantage of SET is its interconnectivity with the Metasploit framework,
    which provides the payloads needed for exploitation, the encryption to bypass
    antivirus software, and the listener module, which connects to the compromised
    system when it sends a shell back to the attacker.
  prefs: []
  type: TYPE_NORMAL
- en: 'To open SET in a Kali distribution, go to `Applications | Social Engineering
    Tools | social engineering toolkit`, or enter `sudo setoolkit` at a shell prompt.
    You will be presented with the main menu, as shown in *Figure 5.13*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.13: Startup screen on SET'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you select `1) Social-Engineering Attacks`, you will be presented with the
    following submenu, shown in *Figure 5.14*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_14.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.14: Social engineering attack main menu'
  prefs: []
  type: TYPE_NORMAL
- en: 'The attacking menu options are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Spear-Phishing Attack Vectors**: This module allows an attacker to create
    email messages and templates and send them to targeted victims with attached exploits.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Website Attack Vectors**: One of the comprehensive modes that allow attackers
    to utilize multiple sub-modules to perform a variety of web attacks—we will explore
    some modules in the coming sections.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Infectious Media Generator**: This creates an `autorun.inf` file and Metasploit
    payload. Once burned or copied to a USB device or physical media (CD or DVD),
    and inserted into the target system, it will trigger autorun (if autorun is enabled)
    and compromise the system.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Create a Payload and Listener**: This module is a rapid menu-driven method
    of creating a Metasploit payload. The attacker must use a separate social engineering
    attack to convince the target to launch it.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Mass Mailer Attack**: To be able to send mass emails using `Sendmail` and
    spoof the sender’s identity.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Arduino-Based Attack Vector**: This programs Arduino-based devices, such
    as the Teensy ([https://www.pjrc.com/teensy/](https://www.pjrc.com/teensy/)).
    Because these devices register as a USB keyboard when connected to a physical
    Windows system, they can bypass security based on disabling autorun or other endpoint
    protection.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Wireless Access Point Attack Vector**: This will create a fake wireless access
    point and DHCP server on the attacker’s system, and redirect all DNS queries to
    the attacker. The attacker can then launch various attacks, such as the Java applet
    or a credential harvester attack.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**QRCode Generator Attack Vector**: This creates a QR code with a defined URL
    associated with an attack.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**PowerShell Attack Vectors**: This allows the attacker to create attacks that
    rely on PowerShell, a command-line shell and scripting language available on versions
    of Windows from Vista onwards.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Third Party Modules**: This allows the attacker to use the **Remote Administration
    Tool Tommy Edition** (**RATTE**) and Google analytics attack by Zonksec. RATTE
    is a part of the Java applet attack; it is a text menu-driven remote access tool
    and can work as an isolated payload.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SET also provides a menu item for **fast-track penetration testing**, which
    gives rapid access to some specialized tools that support brute-force identification
    and password cracking of SQL databases, as well as some customized exploits that
    are based on Python, SCCM attack vectors, Dell computer DRAC/chassis exploitation,
    user enumeration, and PsExec PowerShell injection.
  prefs: []
  type: TYPE_NORMAL
- en: The menu also gives options for updating the SET and updating the configuration.
    However, these additional options should be avoided, as they are not fully supported
    by Kali, and may cause conflicts with dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: Social-engineering attacks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The latest version of the social engineering toolkit has removed the Spoof SMS
    and Full-screen attack modules. The following is a brief explanation of the social
    engineering attacks.
  prefs: []
  type: TYPE_NORMAL
- en: '`The Spear-Phishing Attack Vector` allows an attacker to create email messages
    and send them to targeted victims with attached exploits. `Website Attack Vectors`
    utilize multiple web-based attacks, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Java applet attack method**: This spoofs a Java certificate and delivers
    a Metasploit-based payload. This is one of the most successful attacks, and it
    is effective against Windows, Linux, and macOS targets.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Metasploit browser exploit method**: This delivers a Metasploit payload using
    an iFrame attack.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Credential harvester attack method**: This clones a website and automatically
    rewrites the `POST` parameters to allow an attacker to intercept and harvest user
    credentials; it then redirects the victim back to the original site when harvesting
    is completed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Tabnabbing attack method**: This replaces information on an inactive browser
    tab with a cloned page that links back to the attacker. When the victim logs in,
    the credentials are sent to the attacker.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Web jacking attack method**: This utilizes iFrame replacements to make the
    highlighted URL link appear legitimate; however, when it is clicked, a window
    pops up and the legitimate link is then replaced with a malicious link.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Multi-attack web method**: This allows an attacker to select some or all
    of the several attacks that can be launched at once, including the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Java applet attack method
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploit browser exploit method
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Credential harvester attack method
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Tabnabbing attack method
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Web Jacking attack method
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HTA attack method**: This is when an attacker presents a fake website that
    will automatically download HTML applications in `.HTA` format.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As an initial example of SET’s strengths, we will see how it can be used to
    gain a remote shell: a connection made from the compromised system back to the
    attacker’s system.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Testers performing a Tabnabbing attack might encounter the following error
    message: `[!] Something went wrong, printing the error: module ''urllib'' has
    no attribute ''urlopen''`. This is a known issue with the current version. However,
    an alternative method is to select the multi-attack web attack method and then
    perform the Tabnabbing attack.'
  prefs: []
  type: TYPE_NORMAL
- en: Credential harvester web attack method
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Credentials, generally the username and password, give a person access to networks,
    computing systems, and data more generally. An attacker can use this information
    indirectly (by logging on to the victim’s Gmail account and sending emails to
    facilitate an attack against the victim’s trusted connections, say), or directly
    against the user’s account. This attack is particularly relevant given the extensive
    reuse of credentials; users typically reuse passwords in multiple places.
  prefs: []
  type: TYPE_NORMAL
- en: Particularly prized are the credentials of a person with privileged access,
    such as a system or database administrator, which can give an attacker access
    to multiple accounts and data repositories.
  prefs: []
  type: TYPE_NORMAL
- en: The SET’s credential harvesting attack uses a cloned site to collect credentials.
    To launch this attack, select `2) Website Attack Vectors` from the main menu,
    then `3) Credential Harvester Attack Method`, and then select `2) Site Cloner`.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this example, we will follow the menu selections to clone a website, such
    as Facebook, as shown in *Figure 5.15*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_15.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.15: Cloning Facebook to our Kali Linux using the credential harvester'
  prefs: []
  type: TYPE_NORMAL
- en: 'Again, the attacker’s IP address must be sent to the intended target. When
    the target clicks on the link or enters the IP address, they will be presented
    with a cloned page that resembles the regular login page for Facebook, as shown
    in *Figure 5.16*, and they will be prompted to enter their username and password:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_16.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.16: Hosting facebook.com on our local Kali Linux'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once this is done, the users will be redirected to the regular Facebook site,
    where they will be logged in to their account. In the background, their access
    credentials will be collected and forwarded to the attacker. The attacker will
    see the following entry, shown in *Figure 5.17*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_17.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.17: Successful capture of the username and password field from our
    hosted local facebook.com'
  prefs: []
  type: TYPE_NORMAL
- en: When the attacker has finished collecting credentials, entering *Ctrl* + *C*
    will generate two reports in the `/SET/reports` directory in XML and HTML formats.
  prefs: []
  type: TYPE_NORMAL
- en: Note that the address in the URL bar is not the valid address for Facebook;
    most users will recognize that something is wrong if they can see the address.
    A successful exploit requires the attacker to prepare the victim with a suitable
    pretext, or story, to make the victim accept the unusual URL. For example, send
    an email to a targeted group of non-technical managers to announce that a local
    Facebook site is now being hosted by IT to reduce delays in the email system.
  prefs: []
  type: TYPE_NORMAL
- en: The credential harvesting attack is an excellent tool for assessing the security
    of a corporate network. To be effective, the organization must first train all
    the employees on how to recognize and respond to a phishing attack. Approximately
    two weeks later, send a corporate-wide email that contains some obvious mistakes
    (incorrect name of the corporate CEO or an address block that contains the wrong
    address) and a link to a program that harvests credentials. Calculate the percentage
    of recipients who responded with their credentials, and then tailor the training
    program to reduce this percentage.
  prefs: []
  type: TYPE_NORMAL
- en: Multi-attack web attack method
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Hail Mary attack for website attack vectors is a multi-attack web method
    that allows the attacker to implement several different attacks at one time, should
    they choose to. By default, all attacks are disabled, and the attacker chooses
    the ones to run against the victim. To launch this attack, select `2) Website
    Attack Vectors` from the main menu, then select `6) Multi-Attack Web Method`,
    and then select `2) Site Cloner`, as shown in *Figure 5.18*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.18: Multi-attack web attack vectors menu'
  prefs: []
  type: TYPE_NORMAL
- en: You can either select `6\. Use them all – A.K.A 'Tactical Nuke'` or enter the
    attack you want to perform by entering the right number; for `Web Jacking Attack
    Method`, for example, enter `5`.
  prefs: []
  type: TYPE_NORMAL
- en: This is an effective option if you are unsure as to which attacks will be effective
    against a target organization; select one employee, determine the successful attack(s),
    and then reuse them against the other employees.
  prefs: []
  type: TYPE_NORMAL
- en: HTA web attack method
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This type of attack is a simple HTML application that can provide full access
    to the remote attacker. The usual file extension of an HTA is `.hta`. An HTA is
    treated like any executable file with the extension `.exe`. When executed via
    `mshta.exe` (or when the file icon is double-clicked), it runs immediately. When
    executed remotely via the browser, the user is asked once, before the HTA is downloaded,
    whether or not to save and run the application; if saved, it can simply be run
    on demand after that.
  prefs: []
  type: TYPE_NORMAL
- en: 'An attacker can create a malicious application for Windows using web technologies.
    To launch an HTA attack using social engineering toolkit, select `1) Social-Engineering
    Attacks` from the main menu. Then, select `2) Website Attack Vectors` from the
    next menu, and select `7) HTA Attack Method`, followed by `2) Site Cloner,` to
    clone any website. In this case, we will clone `facebook.com`, as shown in *Figure
    5.19*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.19: Successful setup of an HTA attack web attack by cloning facebook.com'
  prefs: []
  type: TYPE_NORMAL
- en: 'Attackers will now send the server with the fake `facebook.com` site to the
    victim users to phish for information; *Figure 5.20* depicts what a victim would
    see:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_20.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.20: Victim’s screen, which pops up with the delivery of HTA payload
    to the endpoint'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the victim user runs the HTA file locally on the system, an additional pop-up
    from Internet Explorer security will open up the reverse connection to the attackers,
    as shown in *Figure 5.21*. SET should automatically set up with a listener from
    Metasploit:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_21.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.21: Successful payload execution leading to Metasploit reverse shell
    of the victim'
  prefs: []
  type: TYPE_NORMAL
- en: Using the PowerShell alphanumeric shellcode injection attack
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SET also incorporates more effective attacks based on PowerShell, which is available
    on all Microsoft operating systems after the release of Microsoft Windows Vista.
    Because PowerShell shellcode can easily be injected into the target’s physical
    memory, attacks using this vector do not trigger antivirus alarms.
  prefs: []
  type: TYPE_NORMAL
- en: To launch a PowerShell injection attack using SET, select `1) Social-Engineering
    Attacks` from the main menu. Then select `9) PowerShell Attack Vectors` from the
    next menu. This will give the attacker four options for attack types; for this
    example, select `1` to invoke the PowerShell alphanumeric shellcode injector.
    This will set the attack parameters and prompt the attacker to enter the IP address
    for the payload listener, which will usually be the IP address of the attacker.
    When this has been entered, the program will create the exploit code and start
    a local listener.
  prefs: []
  type: TYPE_NORMAL
- en: 'The PowerShell shellcode that launches the attack is stored at `/root/.set/reports/
    powershell/x86_powershell_injection.txt`. The social engineering aspect of the
    attack occurs when the attacker convinces the intended victim to copy the contents
    of `x86_powershell_injection.txt` into a PowerShell prompt, as shown in *Figure
    5.22*, and execute the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_22.png)Figure 5.22: PowerShell payload in the /root/.set/reports/powershell
    folder'
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in *Figure 5.23*, execution of the shellcode did not trigger an antivirus
    alarm on the target system. Instead, when the code was executed, it opened a Meterpreter
    session on the attacking system and allowed the attacker to gain an interactive
    shell with the remote system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_23.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.23: Confirmation of Metasploit reverse shell from the victim to our
    listener on SET'
  prefs: []
  type: TYPE_NORMAL
- en: Once the remote system access is gained, the attackers should create a backdoor,
    which we will explore in *Chapter 13*, *Command and Control*. We have now explored
    the important techniques that can be used by attackers during a social engineering
    exercise using SET.
  prefs: []
  type: TYPE_NORMAL
- en: Hiding executables and obfuscating the attacker’s URL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As shown in the previous examples, there are two keys to successfully launching
    a social engineering attack. The first is to obtain the information needed to
    make it work: usernames, business information, and supporting details about networks,
    systems, and applications. The majority of the effort, however, is focused on
    the second aspect: crafting the attack to entice the target into opening an executable
    or clicking on a link.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Several attacks produce modules that require the victim to execute them in
    order for the attack to succeed. Unfortunately, users are increasingly wary about
    executing unknown software. There are, however, some ways to increase the possibility
    of successful attack execution, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Launch an attack from a system that is known and trusted by the intended victim
    or spoof the source of the attack. If the attack appears to originate from the
    help desk or IT support and claims to be an urgent software update, it will likely
    be executed:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rename the executable to something that resembles the trusted software, such
    as `Java Update`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Embed the malicious payload into a benign file, such as a PDF file, using an
    attack, such as Metasploit’s `adobe_pdf_embedded_exe_nojs` attack.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Executables can also be bound to Microsoft Office files, MSI install files,
    or BAT files configured to run silently on the desktop.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Have the user click on a link that downloads the malicious executable.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Since the SET uses the attacker’s URL as the destination for its attacks, a
    key success factor is to ensure that the attacker’s URL is believable to the victim.
    There are several techniques used to accomplish this, including the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shorten the URL using a service, such as [https://goo.gl/](https://goo.gl/)or
    [tinyurl.com](http://tinyurl.com). These shortened URLs are common among social
    media platforms, such as Twitter, and victims rarely use precautions when clicking
    on such links.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the link on a social media site, such as Facebook or LinkedIn; the site
    will create its own link to replace yours, with an image of the destination page.
    Then, remove the link that you entered, leaving behind the new social media link.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a fake web page on LinkedIn or Facebook; as the attacker, you control
    the content, and can create a compelling story to drive members to click on links
    or download executables. A well-executed page will not only target employees,
    but also vendors, partners, and their clients, maximizing the success of a social
    engineering attack.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Escalating an attack using DNS redirection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If an attacker or penetration tester has compromised a host on the internal
    network, they can escalate the attack using DNS redirection. This is generally
    considered to be a horizontal attack (it compromises persons of roughly the same
    access privileges); however, it can also escalate vertically if the credentials
    from privileged persons are captured. In this example, we will use bettercap (to
    be explored in more detail in *Chapter 11*, *Action on the Objective and Lateral
    Movement*) as a sniffer, interceptor, and logger for switched LANs. It facilitates
    man-in-the-middle attacks, but we will use it to launch a DNS-redirection attack
    to divert users to sites used for our social engineering attacks.
  prefs: []
  type: TYPE_NORMAL
- en: To start the attack, we need to install bettercap, which is not installed by
    default in the latest version of Kali. This can be achieved by running `sudo apt
    install bettercap`. We should be able to activate any module that is required;
    for example, we will now try the DNS spoof attack module on the target by creating
    a file called `dns.conf` with the IP and domain details, as shown in *Figure 5.24*.
    This will enable any request made to `microsoft.com` on the network to be forwarded
    to the attacker’s IP, in this example `192.168.0.103`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s run the default Apache server on our Kali Linux by activating the service
    by running `sudo systemctl start apache2.service,` run bettercap by entering `sudo
    bettercap` in the terminal, load our DNS configuration with `set dns.spoof.hosts
    dns.conf`, and then turn on DNS spoofing by running `dns.spoof on` in the bettercap
    terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_24.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.24: Configuring bettercap to sniff the network'
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure that all the targets on the network are poised first, testers need
    to enable network sniffing and ARP spoofing modules by typing `net.sniff on` and
    `arp.spoof on` in the bettercap terminal. Successful DNS redirection will be captured
    in the bettercap terminal, as shown in *Figure 5.25*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_25.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.25: Successful redirection of DNS Microsoft.com to the attacker’s
    IP'
  prefs: []
  type: TYPE_NORMAL
- en: When the victims on the network visit `microsoft.com`, they will be sent to
    the Apache service that is hosted on the attacker’s IP. Attackers can choose to
    clone the `microsoft.com` and host it on their Apache server. This attack is more
    successful in an internal infrastructure where there is no additional DNS security
    protection. Most companies have DNS protection on their external infrastructure,
    such as Cloudflare, AWS Shield, and Akamai.
  prefs: []
  type: TYPE_NORMAL
- en: Spear phishing attack
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Phishing is an email fraud attack carried out against a large number of victims,
    such as a list of known American internet users. The targets are generally not
    connected, and the email does not attempt to appeal to any specific individual.
  prefs: []
  type: TYPE_NORMAL
- en: Instead, it contains an item of general interest (for example, *Click here to
    get COVID-19 vaccination*) and a malicious link or attachment. The attacker plays
    the odds that at least some people will click on the attachment to initiate the
    attack.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, spear phishing is a highly specific form of phishing attack;
    by crafting the email message in a particular way, the attacker hopes to attract
    the attention of a specific audience. For example, if the attacker knows that
    the sales department uses a particular application to manage its customer relationships,
    they may spoof an email pretending that it is from the application’s vendor with
    a subject line of `Emergency fix for <application> - Click link to download.`
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps are involved in successfully launching a spear phishing
    attack:'
  prefs: []
  type: TYPE_NORMAL
- en: Before launching the attack, ensure that `sendmail` is installed on Kali (`sudo
    apt-get install sendmail`) and change from `SENDMAIL=OFF` to `SENDMAIL=ON` inside
    the `set.config` file located in `/etc/setoolkit/`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If testers receive any error messages related to `broken package exim*`, you
    should run `sudo apt-get purge exim4-base exim4-config` and then run `sudo apt-get
    install sendmail`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To perform the attack, launch SET and then select `Social Engineering Attacks`
    from the main menu, and then select `Spear-Phishing Attack Vectors` from the submenu.
    This will launch the start options for the attack, as shown in *Figure 5.26*:![](../Images/B17765_05_26.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.26: Spear phishing main menu'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select `1` to perform a mass email attack; you will then be presented with a
    list of attack payloads, as shown in *Figure 5.27*:![](../Images/B17765_05_27.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.27: List of available exploits within the spear phishing module'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The attacker can select any available payload, according to the attacker’s knowledge
    of available targets gained during the reconnaissance phase. In this example,
    we will take the `7) Adobe Flash Player "Button" Remote Code Execution` option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When you select `7`, you will be prompted to select the payloads, as shown
    in *Figure 5.28*. We have utilized Windows Meterpreter reverse shell HTTPS for
    this example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_28.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 5.28: Supported payloads within the framework'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once the payload and exploit are ready from the SET console, attackers will
    get the confirmation shown in *Figure 5.29*:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_29.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 5.29: Creating a PDF file with the Adobe exploit'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, you will be able to rename the file by selecting option `2\. Rename the
    file, I want to be cool`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you rename the file, you will be provided with two options to select, either
    `E-mail Attack Single Email Address` or `E-mail Attack Mass Mailer`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Attackers can choose the mass mailer or individually target a weaker victim,
    depending on their preference. If we use a single email address, SET provides
    further templates that can be utilized by the attackers, as shown in *Figure 5.30*:![](../Images/B17765_05_30.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.30: Available pre-defined templates for a single email address as
    the target'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After you select the phishing template, you will be offered the option of using
    your own Gmail account to launch the attack (`1`) or using your own server or
    open relay (`2`). If you use a Gmail account, it is likely that the attack will
    fail; Gmail inspects outgoing emails for malicious files and is very effective
    at identifying payloads produced by SET and the Metasploit framework. If you have
    to send a payload using Gmail, use Veil 3.1 to encode it first.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'It is recommended that you use the `sendmail` option to send executable files;
    it allows you to spoof the source of the email to make it appear as though it
    originated from a trusted source. To ensure that an email is effective, the attacker
    should take note of the following points:'
  prefs: []
  type: TYPE_NORMAL
- en: The content should provide an inducement (the new server will be faster, have
    improved antivirus) and a stick (changes you will have to make before you can
    access your email). Most people respond to immediate calls for action, particularly
    when it affects them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the sample given previously, the attached document is titled `template.pdf`.
    In a real-world scenario, this would be changed to `instructions.pdf`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure that your spelling and grammar are correct, and the tone of the message
    matches the content.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The title of the individual sending the email should match the content.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the target organization is small, you may have to spoof the name of a real
    individual and send the email to a small group that would not normally interact
    with that person.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Include a phone number; it makes the email look more official, and there are
    various ways to use commercial voice over IP solutions to obtain a short-term
    phone number with a local area code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the attack email is sent to the target, successful activation (the recipient
    launches the executable) will create a reverse Meterpreter tunnel to the attacker’s
    system. The attacker will then be able to control the compromised system.
  prefs: []
  type: TYPE_NORMAL
- en: Email phishing using Gophish
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Gophish is a fully integrated open-source phishing framework and also has commercial
    support. The framework makes it easy for any type of user to quickly create a
    phishing campaign and deploy a sophisticated phishing simulation or perform a
    real attack within a few minutes. Unlike SET, Gophish is not preinstalled on Kali
    Linux. In this section, we will explore how to set up the environment:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the right release, according to your system configuration, by visiting
    [https://github.com/gophish/gophish/releases](https://github.com/gophish/gophish/releases).
    In this book, we will utilize the gophish-v0.11.1 64-bit Linux version.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the app is download to Kali Linux, we will unzip the folder and configure
    the `config.json` file with the right information; attackers can choose to utilize
    any custom database, such as MySQL, MSSQL, and so on. We will use `sqlite3`; an
    explicit IP address must be declared in `listen_url` if testers prefer to share
    the same resource over the LAN, as shown in *Figure 5.31*. It is set to `0.0.0.0`
    to listen on all Ethernet adapters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'By default, it will be exposed only to the localhost:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_31.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 5.31: Changing the Gophish configuration files and setting the listen
    URL to 0.0.0.0:3333'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The next step is to change the file permission to execute by running `chmod
    +x gophish` in the Kali Linux terminal. Finally, run the application by typing
    `sudo ./gophish` from the same folder, which should bring up the Gophish web application
    portal on port `3333` by default, with a self-signed SSL certificate. To avoid
    the default credentials for the application, the latest version of Gophish generates
    a temporary password for the `admin` user during the initial startup script, as
    shown in *Figure 5.32*:![](../Images/B17765_05_32.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.32: Auto generated admin user password when Gophish is launched'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You should now be able to access the application by visiting `https://yourIP:3333`;
    you should now be able to log in with the user `admin` and the password captured
    from the previous step. This should force the testers to reset their initial password,
    as shown in *Figure 5.33*:![](../Images/B17765_05_33.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 5.33: Forced password reset screen of Gophish after successful login
    for user admin'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Testers will receive a certificate error in the browser when it is hosted internally
    with the Gophish self-signed certificates.
  prefs: []
  type: TYPE_NORMAL
- en: Launching a phishing attack using Gophish
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are prerequisites that need to be set up in Gophish before launching
    a phishing campaign. They can be broadly divided into several important steps
    to do before launching a successful campaign:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Templates**: Templates are a very crucial part of phishing; you must be able
    to create your own templates based on your game plan. The most commonly used templates
    are Office365, Webmail, and internal Facebook and Gmail logins. Some of the templates
    can be found at [https://github.com/PacktPublishing/Mastering-Kali-Linux-for-Advanced-Penetration-Testing-4E/tree/main/Chapter%2005](https://github.com/PacktPublishing/Mastering-Kali-Linux-for-Advanced-Penetration-Testing-4E/tree/main/Chapter%2005).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following simple steps are involved in creating the templates: while in
    the Templates section, click on **New Template**, enter details in the **Name**
    and **Subject** fields, click on HTML, copy the raw HTML contents from the templates,
    paste them in the editor, and click on **Save Template**.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Landing Pages**: The effectiveness of the phishing campaign will always relate
    to how you redirect the victims to a legitimate website using the landing pages.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Similar to the steps under Templates, navigate to Landing Page on the left menu,
    click on **New page,** enter the **Name**, and copy and paste the template—you
    may also directly import a site. Finally, click on **Save Page**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Sending Profiles**: A profile is the place where you will have all the SMTP
    details and sender details; Gophish allows attackers to have multiple profiles
    defined, along with custom email headers.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To create a profile, click on **Send Profile**, **New Profile**, and enter
    the **Name** and **Interface type**; by default, it should be **SMTP**. Enter
    the **From** section with an Email ID of your choosing. **Host** is the SMTP server—attackers
    can choose their own or use an existing service, such as AWS. In our case, we
    will use `smtp.gmail.com:465` and enter the **username** and **password**. Most
    anti-phishing solutions block emails based on the header information. Therefore,
    try using the **Email headers** `Microsoft Office Outlook XX` or `Outlook Express
    for Macintosh`. If all the settings are working, you can click on **Send Test
    Email**. A successful test email should look similar to the one shown in *Figure
    5.34*. Finally, click on **Save Profile**:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_34.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 5.34: Default email from Gophish'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Testers using the Gmail services must ensure that **Less secure App access**
    is turned on to allow the third-party application to use the services. This can
    be achieved by visiting [https://myaccount.google.com/lesssecureapps?pli=1](https://myaccount.google.com/lesssecureapps?pli=1)
    and turning on **Allow less secure apps**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Users and groups**: Upload single or multiple targeted victims’ email IDs
    with their first and last names. Gophish allows testers to create groups and import
    them in CSV format.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to **Users & Groups** from the menu, click on **New Group**, and either
    import a CSV-formatted file or manually enter the first name, last name, email
    ID, and position. Click on **Add** and then click on **Save Changes**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Account Management**: A single instance can spin multiple phishing campaigns;
    hence individual users can have their own account to the portal.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Webhook**: A webhook is simply a web callback or HTTP push **Application
    Programming Interface** (**API**). This option allows the testers to implement
    a webhook, which can help push the results directly to any third-party API.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once we have all the templates, landing pages, users, and sending profiles
    set, we are now set to launch the campaign by clicking on the **Campaigns** from
    the menu. Then click on **New Campaign** and enter the **Name** of the campaign.
    Select the **Email template**, **Landing Page**, and provide the **URL** of the
    host/IP that will serve the phishing pages; typically, this would be the same
    Kali Linux IP address as where Gophish is running. Select **Launch date** or schedule
    the date and time, select the **Sending profile** that was created, select the
    **Groups**, as shown in *Figure 5.35*, and finally click **Launch Campaign**.
    We can select the date and time when the phishing will start and the group of
    target victims. Gophish also provides an option to test an email to see whether
    it was blocked or delivered straight to the target’s inbox, depending on the templates
    selected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_35.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.35: Launching an email campaign on specific targets'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the campaign is successfully launched, the victim should receive an email
    based on the templates that were chosen during the campaign selection. An email
    with the `Microsoft Teams Unread messages` template would look similar to that
    shown in *Figure 5.36*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_36.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.36: Sample phishing email that uses the Microsoft Teams Unread template'
  prefs: []
  type: TYPE_NORMAL
- en: 'When the target user clicks on any link in the email, they will be taken to
    the Landing Page along with the Unique RID number that is generated by Gophish
    to the target user. A sample Office 365 landing page should be seen, as shown
    in *Figure 5.37*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_37.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.37: Sample Office 365 landing page when the victim clicks on the link'
  prefs: []
  type: TYPE_NORMAL
- en: The same landing page can also be hooked with a BeEF framework to hijack browsers
    to take advantage of the users’ current browser sessions; however, we will explore
    the details of BeEF in *Chapter 7*, *Exploiting Web-Based Applications*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, the testers can track all the emails sent, opened, clicked, and submitted
    per campaign launched, as shown in *Figure 5.38*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_38.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.38: Gophish dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: The **Email Reported** option includes the users who spotted the phishing emails
    and reported them as suspicious. Typically, an internal IT security team member
    can use this output to evaluate their users’ cyber-security awareness.
  prefs: []
  type: TYPE_NORMAL
- en: We now have explored how to download, install, and run Gophish, along with launching
    an email phishing campaign.
  prefs: []
  type: TYPE_NORMAL
- en: Using bulk transfer as phishing to deliver payloads
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Attackers can also utilize bulk file transfer software, such as Smash, Hightail,
    Terashare, WeTransfer, SendSpace, and DropSend. Let’s take a simple scenario:
    assume we have targeted two people, a finance administrator and a CEO. Attackers
    can simply send files between these two victims, visiting one of the bulk transfer
    websites, such as `sendspace.com`, and upload a malicious file, while setting
    the sender as `Financeadmin@targetcompany.com`, and `ceo@targetcompany.com` as
    the receiver. Once the file is uploaded, both parties will receive the emails
    with the file link; in this case, `ceo@targetcompany.com` will receive an email
    stating that the file was sent successfully, and `Financeadmin@cyberhia.com` will
    receive something similar, as shown in *Figure 5.39*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B17765_05_39.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5.39: Sendspace bulk transfer emails'
  prefs: []
  type: TYPE_NORMAL
- en: Most of the time, these bulk transfers are not on the blocked list in a corporate
    environment (if one is blocked, attackers can switch to another), so they provide
    direct access to internal staff and create an effective message, and an undetectable
    payload will provide a better success rate, without revealing the identity of
    the attackers.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Social engineering is a method of hacking humans, taking advantage of a person’s
    inherent trust and helpfulness to attack a network and its devices. In this chapter,
    we examined how social engineering can be used to facilitate attacks designed
    to capture credentials, activate malicious software, or assist in launching further
    attacks. Most of the attacks rely on SET and Gophish; however, Kali has several
    other applications that can be improved using a social engineering methodology.
    We explored how new bulk transfer companies can potentially be utilized to spread
    the payload without having to use any email services to perform phishing. We also
    examined how physical access, usually in conjunction with social engineering,
    can be used to place hostile devices on a target network.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will examine how to conduct reconnaissance against wireless
    networks and attack open networks, as well as networks that are protected with
    encryption schemes based on WPA2\. We will also examine general weaknesses in
    wireless and Bluetooth protocols that render them vulnerable to denial-of-service
    attacks, along with impersonation attacks.
  prefs: []
  type: TYPE_NORMAL
